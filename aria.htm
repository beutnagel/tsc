<!DOCTYPE html>
<HTML>
<HEAD>
<TITLE>TSC in the web</TITLE>
<LINK href="nouislider.css" rel="stylesheet"/>
<SCRIPT type="text/javascript" src="nouislider.min.js"></SCRIPT>
<LINK href="dygraph.css" rel="stylesheet"/>
<LINK href="tsc.css" rel="stylesheet"/>
<LINK href="https://fonts.googleapis.com/css?family=Barlow+Condensed|Raleway|Material+Icons" rel="stylesheet">
<SCRIPT type="text/javascript" src="dygraph.min.js"></SCRIPT>
<SCRIPT type="text/javascript" src="tsc_common.js"></SCRIPT>

<STYLE>
#range_RB,
#range_RT,
#range_RM {
    width: 300px;
    margin: 0 auto 0px;
    display: inline-block;
}
#value_RB,
#value_RT,
#value_RM {
    width: 70px;
    display: inline-block;
    text-align: center;
    margin: 0;
}
#label_RB,
#label_RT,
#label_RM {
    width: 150px;
    display: inline-block;
    text-align: center;
    margin: 0;
}
</STYLE>

</HEAD>
<BODY>
<FORM name="frm">
  <TABLE align="center">
    <TR>
      <TD colspan="3" align="left" class="navbar">
        <DIV id="linkDiv" style="float: left;" class="navbar-stack"></DIV>
        <DIV id="infoDiv" style="float: right;" class="navbar-info"><a href="info.htm" class="navbar-menu-item">INFO</a></DIV>
      </TD>
    </TR>
    <TR>
      <TD align="center" valign="top" width="400" class="tonestack-image">
        <IMG src="aria2_pic.png"></IMG>
      </TD>
      <TD align="right" valign="top" width="180" class="tonestack-values">
        <table class="tonestack-values-table">
                <thead>
                    <tr>
                        <th class="tonestack-value-th-part">Part</th>
                        <th class="tonestack-value-th-value">Value</th>
                        <th class="tonestack-value-th-unit"></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="tonestack-value-label">RIN</td>
                        <td class="tonestack-value-value"><INPUT type="text" name="RIN" id="id_RIN" size="7" readonly="readonly" style="text-align: right" class="tonestack-value-input"></td>
                        <td class="tonestack-value-unit">&Omega;</td>
                    </tr>
                    <tr>
                        <td class="tonestack-value-label">RT</td>
                        <td class="tonestack-value-value"><INPUT type="text" name="RT" id="id_RT" size="7" readonly="readonly" style="text-align: right" class="tonestack-value-input"></td>
                        <td class="tonestack-value-unit">&Omega;</td>
                    </tr>
                    <tr>
                        <td class="tonestack-value-label">RB</td>
                        <td class="tonestack-value-value"><INPUT type="text" name="RB" id="id_RB" size="7" readonly="readonly" style="text-align: right" class="tonestack-value-input"></td>
                        <td class="tonestack-value-unit">&Omega;</td>
                    </tr>
                    <tr>
                        <td class="tonestack-value-label">RM</td>
                        <td class="tonestack-value-value"><INPUT type="text" name="RM" id="id_RM" size="7" readonly="readonly" style="text-align: right" class="tonestack-value-input"></td>
                        <td class="tonestack-value-unit">&Omega;</td>
                    </tr>
                    <tr>
                        <td class="tonestack-value-label">R1</td>
                        <td class="tonestack-value-value"><INPUT type="text" name="RB3" id="id_RB3" size="7" readonly="readonly" style="text-align: right" class="tonestack-value-input"></td>
                        <td class="tonestack-value-unit">&Omega;</td>
                    </tr>
                    <tr>
                        <td class="tonestack-value-label">R2</td>
                        <td class="tonestack-value-value"><INPUT type="text" name="RT3" id="id_RT3" size="7" readonly="readonly" style="text-align: right" class="tonestack-value-input"></td>
                        <td class="tonestack-value-unit">&Omega;</td>
                    </tr>
                    <tr>
                        <td class="tonestack-value-label">R3</td>
                        <td class="tonestack-value-value"><INPUT type="text" name="RB4" id="id_RB4" size="7" readonly="readonly" style="text-align: right" class="tonestack-value-input"></td>
                        <td class="tonestack-value-unit">&Omega;</td>
                    </tr>
                    <tr>
                        <td class="tonestack-value-label">R4</td>
                        <td class="tonestack-value-value"><INPUT type="text" name="RM3" id="id_RM3" size="7" readonly="readonly" style="text-align: right" class="tonestack-value-input"></td>
                        <td class="tonestack-value-unit">&Omega;</td>
                    </tr>
                    <tr>
                        <td class="tonestack-value-label">RL</td>
                        <td class="tonestack-value-value"><INPUT type="text" name="RL" id="id_RL" size="7" readonly="readonly" style="text-align: right" class="tonestack-value-input"></td>
                        <td class="tonestack-value-unit">&Omega;</td>
                    </tr>
                    <tr>
                        <td class="tonestack-value-label">C1</td>
                        <td class="tonestack-value-value"><INPUT type="text" name="CT1" id="id_CT1" size="7" readonly="readonly" style="text-align: right" class="tonestack-value-input"></td>
                        <td class="tonestack-value-unit">pF</td>
                    </tr>
                    <tr>
                        <td class="tonestack-value-label">C2</td>
                        <td class="tonestack-value-value"><INPUT type="text" name="CB1" id="id_CB1" size="7" readonly="readonly" style="text-align: right" class="tonestack-value-input"></td>
                        <td class="tonestack-value-unit">pF</td>
                    </tr>
                    <tr>
                        <td class="tonestack-value-label">C3</td>
                        <td class="tonestack-value-value"><INPUT type="text" name="CT2" id="id_CT2" size="7" readonly="readonly" style="text-align: right" class="tonestack-value-input"></td>
                        <td class="tonestack-value-unit">pF</td>
                    </tr>
                </tbody>
        </table>
        <CENTER>
        <INPUT type="button" name="edit" value="Edit" title="Edit values" id="id_edit" onclick="editValues();" class="tonestack-values-button">
        <INPUT type="button" name="apply" value="Apply" title="Apply values" id="id_apply" onclick="applyValues();" class="tonestack-values-button">
        <INPUT type="button" name="defaults" value="Default" title="Set default values" id="id_defaults" onclick="setDefaultValues();" class="tonestack-values-button">
        </CENTER>
      </TD>  
      <TD rowspan="2" align="center" valign="top" width="700" class="tonestack-graph">
         <div id="buttonContainer">
            <INPUT type="button" name="Clear" value="Clear snapshots" id="id_clear" onclick="clearSnapshots();" class="tonestack-values-button" style="float: right;"> &nbsp;
            <INPUT type="button" name="Snapshot" value="Take snapshot" id="id_snapshot" onclick="addSeries();" class="tonestack-values-button" style="float: right;"> &nbsp;
            <INPUT type="button" name="Sweep" value="Sweep" id="id_sweep" onclick="sweepValues();" class="tonestack-values-button" style="float: right;">
        </div>
        <div id="graphContainer" class="tonestack-graph-container">
            <DIV id="graph" style="height: 480px; width: 640px;"></DIV>
            <DIV id="legendDiv" class="tonestack-graph-value"></DIV>
        </div>
      </TD>
    </TR>
    <TR>
      <TD colspan="2" class="tonestack-sliders">
        <BR>
        <SPAN id="label_RB" class="tonestack-slider-label">RB <select id="id_RB_pot" name="RB_pot" class="tonestack-select-pot" onchange="doCalc()">
                                                              <option value="Linear">Linear</option>
                                                              <option value="LogA">LogA</option>
                                                              <option value="LogB" selected="selected">LogB</option></select> 
        </SPAN>
        <DIV id="range_RB" class="tonestack-slider-input"></DIV>
        <SPAN id="value_RB" class="tonestack-slider-value"></SPAN><BR><BR><BR><BR>
        <SPAN id="label_RM" class="tonestack-slider-label">RM <select id="id_RM_pot" name="RM_pot" class="tonestack-select-pot" onchange="doCalc()">
                                                              <option value="Linear">Linear</option>
                                                              <option value="LogA">LogA</option>
                                                              <option value="LogB" selected="selected">LogB</option></select> 
        </SPAN>
        <DIV id="range_RM" class="tonestack-slider-input"></DIV>
        <SPAN id="value_RM" class="tonestack-slider-value"></SPAN><BR><BR><BR><BR>
        <SPAN id="label_RT" class="tonestack-slider-label">RT <select id="id_RT_pot" name="RT_pot" class="tonestack-select-pot" onchange="doCalc()">
                                                              <option value="Linear">Linear</option>
                                                              <option value="LogA">LogA</option>
                                                              <option value="LogB" selected="selected">LogB</option></select> 
        </SPAN>
        <DIV id="range_RT" class="tonestack-slider-input"></DIV>
        <SPAN id="value_RT" class="tonestack-slider-value"></SPAN><BR><BR><BR><BR>
      </TD>
    </TR>
  </TABLE>

<SCRIPT>
    // create links to all the tone stack pages to the top of the page 
    createLinks("linkDiv","Aria");

    // define component variables for calculation
    var RTreble;
    var RBass;
    var RMid;
    var RIN;
    var RT3;
    var RM3;
    var RB3;
    var RB4;
    var RL;
    var CT1;
    var CT2;
    var CB1;

    var data = [];

    // create sliders and save the div-element of the slider
    var range_RB = createSlider('range_RB','value_RB');
    var range_RM = createSlider('range_RM','value_RM');
    var range_RT = createSlider('range_RT','value_RT');

    // variable g will hold the graph object for synchronized updates
    var g = null;

    // data for frequency points is created here and saved to array X
    X = createFrequencies(90,10,100000,1);

    // set the default values to the component variables and input fields
    setDefaultValues();

    // start listening the onSlide event from the slider and run the analysis function
    range_RB.noUiSlider.on('slide', doCalc);
    range_RM.noUiSlider.on('slide', doCalc);
    range_RT.noUiSlider.on('slide', doCalc);

    // this function is called when the Apply-button is clicked
    function applyValues() {
        RIN     = parseInt(document.frm.RIN.value);
        RBass   = parseInt(document.frm.RB.value);
        RMid    = parseInt(document.frm.RM.value);
        RTreble = parseInt(document.frm.RT.value);
        RT3     = parseInt(document.frm.RT3.value);
        RM3     = parseInt(document.frm.RM3.value);
        RB3     = parseInt(document.frm.RB3.value);
        RB4     = parseInt(document.frm.RB4.value);
        RL      = parseInt(document.frm.RL.value);
        CT1     = (1e-12)*parseInt(document.frm.CT1.value);
        CT2     = (1e-12)*parseInt(document.frm.CT2.value);
        CB1     = (1e-12)*parseInt(document.frm.CB1.value);

        // set the input fields to readonly mode with gray background
        var inputElements = document.forms["frm"].getElementsByTagName('input');
        for (var i in inputElements) {
            if (inputElements[i].type == "text") {
                inputElements[i].setAttribute('readonly', 'readonly');
                inputElements[i].style.backgroundColor = "#EBEBE4";
            }
        }
        doCalc();
    }


    // this function is called when the Edit-button is clicked
    function editValues() {
        var inputElements = document.forms["frm"].getElementsByTagName('input');
        for (var i in inputElements) {
            if (inputElements[i].type == "text") {
                inputElements[i].removeAttribute('readonly');
                inputElements[i].style.backgroundColor = "#FFFFFF";
            }
        }
    }


    // This function is called when the Set default values -button is clicked.
    // It sets the hard-coded values to the input fields and applies the values.
    function setDefaultValues() {
        document.frm.RIN.value = 1000;
        document.frm.RT.value  = 100000;
        document.frm.RB.value  = 100000;
        document.frm.RM.value  = 100000;
        document.frm.RT3.value  = 220000;
        document.frm.RM3.value  = 1000000;
        document.frm.RB3.value  = 33000;
        document.frm.RB4.value  = 100000;
        document.frm.RL.value  = 1000000;
        document.frm.CT1.value  = 1000;
        document.frm.CT2.value  = 1000;
        document.frm.CB1.value  = 220000;
        
        applyValues();
    }
    
    
    // creates a sweep plot with max and mid values
    // prints amplitude data to console for testing
    // against model validity. Use "store as global variable"
    // in Firefox for all arrays and then ''+temp8;
    function sweepValues() {
        range_RB.noUiSlider.set(5);
        range_RM.noUiSlider.set(5);
        range_RT.noUiSlider.set(5);
        doCalc();
        console.log(data);
        addSeries();
        for (p = 0; p <= 10; p += 10) {
            range_RB.noUiSlider.set(p);
            for (q = 0; q <=10; q += 10) {
                range_RM.noUiSlider.set(q);
                for (r = 0; r <=10; r += 10) {
                    range_RT.noUiSlider.set(r);
                    doCalc();
                    console.log(data);
                    addSeries();
                }
            }
        }
    }


    // This function is called with every change of the slider.
    // It does the hard math and evaluates the filter transfer function
    // for the given frequency range and updates values to the graph.
    function doCalc() {
        var row = [];
        data = [];

        // pot rotation 0 - 10 from the slider component
        var RotTreble = getRotationForPotType(range_RT.noUiSlider.get(), document.frm.RT_pot.value);
        var RotMid    = getRotationForPotType(range_RM.noUiSlider.get(), document.frm.RM_pot.value);
        var RotBass   = getRotationForPotType(range_RB.noUiSlider.get(), document.frm.RB_pot.value);


        var RT2  = Math.round( RTreble*(1.0*RotTreble/10.0) );
        var RT1  = Math.round( RTreble*(1.0 - 1.0*RotTreble/10.0) );
        var RB2  = Math.round( RBass*(1.0*RotBass/10.0) );
        var RB1  = Math.round( RBass*(1.0 - 1.0*RotBass/10.0) );
        var RM2  = Math.round( RMid*(1.0*RotMid/10.0) );
        var RM1  = Math.round( RMid*(1.0 - 1.0*RotMid/10.0) );


var DEN_XRe = 0;

var DEN_AIm = CB1*CT1*CT2*RB2*RIN*RL*RM2*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RIN*RL*RM2*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RL*RM2*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RL*RM2*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB4*RIN*RM2*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB4*RIN*RM2*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RIN*RM2*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RM2*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RM2*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RM2*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RIN*RL*RM1*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RIN*RL*RM1*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RL*RM1*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RL*RM1*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB4*RIN*RM1*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB4*RIN*RM1*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RIN*RM1*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RM1*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RM1*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RM1*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RIN*RL*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RIN*RL*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RM3*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RIN*RL*RM1*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RIN*RL*RM1*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RL*RM1*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RL*RM1*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB4*RIN*RM1*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB4*RIN*RM1*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RIN*RM1*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RM1*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RM1*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RM1*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB4*RIN*RL*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB4*RIN*RL*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RIN*RL*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RIN*RL*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RIN*RL*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RL*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RL*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RL*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB4*RIN*RL*RM1*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB4*RIN*RL*RM1*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RIN*RL*RM1*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RL*RM1*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RL*RM1*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RL*RM1*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RL*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RL*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RL*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB4*RIN*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB4*RIN*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RIN*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RIN*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RIN*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB2*RB4*RIN*RL*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB4*RIN*RL*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RIN*RL*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RIN*RL*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RIN*RL*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RL*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RL*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RL*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RL*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RL*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RL*RM3*RT2*RT3
 + CB1*CT1*CT2*RB2*RB4*RIN*RL*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB1*RB4*RIN*RL*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RIN*RL*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RIN*RL*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RIN*RL*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RL*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RL*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RL*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RL*RM1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RL*RM1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RL*RM1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB4*RIN*RL*RM2*RM3*RT1*RT3
 + CB1*CT1*CT2*RB1*RB4*RIN*RL*RM2*RM3*RT1*RT3
 + CB1*CT1*CT2*RB1*RB2*RIN*RL*RM2*RM3*RT1*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RL*RM2*RM3*RT1*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RL*RM2*RM3*RT1*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RL*RM2*RM3*RT1*RT3
 + CB1*CT1*CT2*RB2*RB4*RIN*RL*RM1*RM3*RT1*RT3
 + CB1*CT1*CT2*RB1*RB4*RIN*RL*RM1*RM3*RT1*RT3
 + CB1*CT1*CT2*RB1*RB2*RIN*RL*RM1*RM3*RT1*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RL*RM1*RM3*RT1*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RL*RM1*RM3*RT1*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RL*RM1*RM3*RT1*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RL*RM3*RT1*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RL*RM3*RT1*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RL*RM3*RT1*RT3
 + CB1*CT1*CT2*RB2*RB4*RIN*RL*RM1*RM2*RT1*RT3
 + CB1*CT1*CT2*RB1*RB4*RIN*RL*RM1*RM2*RT1*RT3
 + CB1*CT1*CT2*RB1*RB2*RIN*RL*RM1*RM2*RT1*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RL*RM1*RM2*RT1*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RL*RM1*RM2*RT1*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RL*RM1*RM2*RT1*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RL*RM2*RT1*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RL*RM2*RT1*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RL*RM2*RT1*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RL*RM2*RM3*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RL*RM2*RM3*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RL*RM2*RM3*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RL*RM1*RM3*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RL*RM1*RM3*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RL*RM1*RM3*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RIN*RL*RM1*RM2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RIN*RL*RM1*RM2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RIN*RL*RM1*RM2*RT3;


var DEN_BRe = CT1*CT2*RIN*RL*RM2*RM3*RT1*RT2*RT3 + CT1*CT2*RB3*RL*RM2*RM3*RT1*RT2*RT3
 + CT1*CT2*RB2*RL*RM2*RM3*RT1*RT2*RT3 + CT1*CT2*RB1*RL*RM2*RM3*RT1*RT2*RT3
 + CT1*CT2*RB4*RIN*RM2*RM3*RT1*RT2*RT3 + CT1*CT2*RB2*RIN*RM2*RM3*RT1*RT2*RT3
 + CT1*CT2*RB3*RB4*RM2*RM3*RT1*RT2*RT3 + CT1*CT2*RB2*RB4*RM2*RM3*RT1*RT2*RT3
 + CT1*CT2*RB1*RB4*RM2*RM3*RT1*RT2*RT3 + CT1*CT2*RB2*RB3*RM2*RM3*RT1*RT2*RT3
 + CT1*CT2*RB1*RB2*RM2*RM3*RT1*RT2*RT3 + CT1*CT2*RIN*RL*RM1*RM3*RT1*RT2*RT3
 + CT1*CT2*RB3*RL*RM1*RM3*RT1*RT2*RT3 + CT1*CT2*RB2*RL*RM1*RM3*RT1*RT2*RT3
 + CT1*CT2*RB1*RL*RM1*RM3*RT1*RT2*RT3 + CT1*CT2*RB4*RIN*RM1*RM3*RT1*RT2*RT3
 + CT1*CT2*RB2*RIN*RM1*RM3*RT1*RT2*RT3 + CT1*CT2*RB3*RB4*RM1*RM3*RT1*RT2*RT3
 + CT1*CT2*RB2*RB4*RM1*RM3*RT1*RT2*RT3 + CT1*CT2*RB1*RB4*RM1*RM3*RT1*RT2*RT3
 + CT1*CT2*RB2*RB3*RM1*RM3*RT1*RT2*RT3 + CT1*CT2*RB1*RB2*RM1*RM3*RT1*RT2*RT3
 + CT1*CT2*RB3*RIN*RL*RM3*RT1*RT2*RT3 + CT1*CT2*RB2*RIN*RL*RM3*RT1*RT2*RT3
 + CT1*CT2*RB1*RIN*RL*RM3*RT1*RT2*RT3 + CT1*CT2*RB3*RB4*RIN*RM3*RT1*RT2*RT3
 + CT1*CT2*RB2*RB4*RIN*RM3*RT1*RT2*RT3 + CT1*CT2*RB1*RB4*RIN*RM3*RT1*RT2*RT3
 + CT1*CT2*RB2*RB3*RIN*RM3*RT1*RT2*RT3 + CT1*CT2*RB1*RB2*RIN*RM3*RT1*RT2*RT3
 + CT1*CT2*RIN*RL*RM1*RM2*RT1*RT2*RT3 + CT1*CT2*RB3*RL*RM1*RM2*RT1*RT2*RT3
 + CT1*CT2*RB2*RL*RM1*RM2*RT1*RT2*RT3 + CT1*CT2*RB1*RL*RM1*RM2*RT1*RT2*RT3
 + CT1*CT2*RB4*RIN*RM1*RM2*RT1*RT2*RT3 + CT1*CT2*RB2*RIN*RM1*RM2*RT1*RT2*RT3
 + CT1*CT2*RB3*RB4*RM1*RM2*RT1*RT2*RT3 + CT1*CT2*RB2*RB4*RM1*RM2*RT1*RT2*RT3
 + CT1*CT2*RB1*RB4*RM1*RM2*RT1*RT2*RT3 + CT1*CT2*RB2*RB3*RM1*RM2*RT1*RT2*RT3
 + CT1*CT2*RB1*RB2*RM1*RM2*RT1*RT2*RT3 + CT1*CT2*RB4*RIN*RL*RM2*RT1*RT2*RT3
 + CT1*CT2*RB3*RIN*RL*RM2*RT1*RT2*RT3 + CT1*CT2*RB1*RIN*RL*RM2*RT1*RT2*RT3
 + CT1*CT2*RB3*RB4*RL*RM2*RT1*RT2*RT3 + CT1*CT2*RB2*RB4*RL*RM2*RT1*RT2*RT3
 + CT1*CT2*RB1*RB4*RL*RM2*RT1*RT2*RT3 + CT1*CT2*RB2*RB3*RL*RM2*RT1*RT2*RT3
 + CT1*CT2*RB1*RB2*RL*RM2*RT1*RT2*RT3 + CT1*CT2*RB3*RB4*RIN*RM2*RT1*RT2*RT3
 + CT1*CT2*RB2*RB4*RIN*RM2*RT1*RT2*RT3 + CT1*CT2*RB1*RB4*RIN*RM2*RT1*RT2*RT3
 + CT1*CT2*RB2*RB3*RIN*RM2*RT1*RT2*RT3 + CT1*CT2*RB1*RB2*RIN*RM2*RT1*RT2*RT3
 + CT1*CT2*RB4*RIN*RL*RM1*RT1*RT2*RT3 + CT1*CT2*RB2*RIN*RL*RM1*RT1*RT2*RT3
 + CT1*CT2*RB3*RB4*RL*RM1*RT1*RT2*RT3 + CT1*CT2*RB2*RB4*RL*RM1*RT1*RT2*RT3
 + CT1*CT2*RB1*RB4*RL*RM1*RT1*RT2*RT3 + CT1*CT2*RB2*RB3*RL*RM1*RT1*RT2*RT3
 + CT1*CT2*RB1*RB2*RL*RM1*RT1*RT2*RT3 + CT1*CT2*RB3*RB4*RIN*RL*RT1*RT2*RT3
 + CT1*CT2*RB2*RB4*RIN*RL*RT1*RT2*RT3 + CT1*CT2*RB1*RB4*RIN*RL*RT1*RT2*RT3
 + CT1*CT2*RB2*RB3*RIN*RL*RT1*RT2*RT3 + CT1*CT2*RB1*RB2*RIN*RL*RT1*RT2*RT3
 + CT1*CT2*RB4*RIN*RL*RM2*RM3*RT2*RT3 + CT1*CT2*RB3*RIN*RL*RM2*RM3*RT2*RT3
 + CB1*CT2*RB2*RIN*RL*RM2*RM3*RT2*RT3 + CB1*CT1*RB2*RIN*RL*RM2*RM3*RT2*RT3
 + CT1*CT2*RB1*RIN*RL*RM2*RM3*RT2*RT3 + CB1*CT2*RB1*RIN*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*RB1*RIN*RL*RM2*RM3*RT2*RT3 + CT1*CT2*RB3*RB4*RL*RM2*RM3*RT2*RT3
 + CT1*CT2*RB2*RB4*RL*RM2*RM3*RT2*RT3 + CT1*CT2*RB1*RB4*RL*RM2*RM3*RT2*RT3
 + CT1*CT2*RB2*RB3*RL*RM2*RM3*RT2*RT3 + CB1*CT2*RB2*RB3*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*RB2*RB3*RL*RM2*RM3*RT2*RT3 + CB1*CT2*RB1*RB3*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*RB1*RB3*RL*RM2*RM3*RT2*RT3 + CT1*CT2*RB1*RB2*RL*RM2*RM3*RT2*RT3
 + CT1*CT2*RB3*RB4*RIN*RM2*RM3*RT2*RT3 + CT1*CT2*RB2*RB4*RIN*RM2*RM3*RT2*RT3
 + CB1*CT2*RB2*RB4*RIN*RM2*RM3*RT2*RT3 + CB1*CT1*RB2*RB4*RIN*RM2*RM3*RT2*RT3
 + CT1*CT2*RB1*RB4*RIN*RM2*RM3*RT2*RT3 + CB1*CT2*RB1*RB4*RIN*RM2*RM3*RT2*RT3
 + CB1*CT1*RB1*RB4*RIN*RM2*RM3*RT2*RT3 + CT1*CT2*RB2*RB3*RIN*RM2*RM3*RT2*RT3
 + CT1*CT2*RB1*RB2*RIN*RM2*RM3*RT2*RT3 + CB1*CT2*RB1*RB2*RIN*RM2*RM3*RT2*RT3
 + CB1*CT1*RB1*RB2*RIN*RM2*RM3*RT2*RT3 + CB1*CT2*RB2*RB3*RB4*RM2*RM3*RT2*RT3
 + CB1*CT1*RB2*RB3*RB4*RM2*RM3*RT2*RT3 + CB1*CT2*RB1*RB3*RB4*RM2*RM3*RT2*RT3
 + CB1*CT1*RB1*RB3*RB4*RM2*RM3*RT2*RT3 + CB1*CT2*RB1*RB2*RB3*RM2*RM3*RT2*RT3
 + CB1*CT1*RB1*RB2*RB3*RM2*RM3*RT2*RT3 + CT1*CT2*RB4*RIN*RL*RM1*RM3*RT2*RT3
 + CT1*CT2*RB3*RIN*RL*RM1*RM3*RT2*RT3 + CB1*CT2*RB2*RIN*RL*RM1*RM3*RT2*RT3
 + CB1*CT1*RB2*RIN*RL*RM1*RM3*RT2*RT3 + CT1*CT2*RB1*RIN*RL*RM1*RM3*RT2*RT3
 + CB1*CT2*RB1*RIN*RL*RM1*RM3*RT2*RT3 + CB1*CT1*RB1*RIN*RL*RM1*RM3*RT2*RT3
 + CT1*CT2*RB3*RB4*RL*RM1*RM3*RT2*RT3 + CT1*CT2*RB2*RB4*RL*RM1*RM3*RT2*RT3
 + CT1*CT2*RB1*RB4*RL*RM1*RM3*RT2*RT3 + CT1*CT2*RB2*RB3*RL*RM1*RM3*RT2*RT3
 + CB1*CT2*RB2*RB3*RL*RM1*RM3*RT2*RT3 + CB1*CT1*RB2*RB3*RL*RM1*RM3*RT2*RT3
 + CB1*CT2*RB1*RB3*RL*RM1*RM3*RT2*RT3 + CB1*CT1*RB1*RB3*RL*RM1*RM3*RT2*RT3
 + CT1*CT2*RB1*RB2*RL*RM1*RM3*RT2*RT3 + CT1*CT2*RB3*RB4*RIN*RM1*RM3*RT2*RT3
 + CT1*CT2*RB2*RB4*RIN*RM1*RM3*RT2*RT3 + CB1*CT2*RB2*RB4*RIN*RM1*RM3*RT2*RT3
 + CB1*CT1*RB2*RB4*RIN*RM1*RM3*RT2*RT3 + CT1*CT2*RB1*RB4*RIN*RM1*RM3*RT2*RT3
 + CB1*CT2*RB1*RB4*RIN*RM1*RM3*RT2*RT3 + CB1*CT1*RB1*RB4*RIN*RM1*RM3*RT2*RT3
 + CT1*CT2*RB2*RB3*RIN*RM1*RM3*RT2*RT3 + CT1*CT2*RB1*RB2*RIN*RM1*RM3*RT2*RT3
 + CB1*CT2*RB1*RB2*RIN*RM1*RM3*RT2*RT3 + CB1*CT1*RB1*RB2*RIN*RM1*RM3*RT2*RT3
 + CB1*CT2*RB2*RB3*RB4*RM1*RM3*RT2*RT3 + CB1*CT1*RB2*RB3*RB4*RM1*RM3*RT2*RT3
 + CB1*CT2*RB1*RB3*RB4*RM1*RM3*RT2*RT3 + CB1*CT1*RB1*RB3*RB4*RM1*RM3*RT2*RT3
 + CB1*CT2*RB1*RB2*RB3*RM1*RM3*RT2*RT3 + CB1*CT1*RB1*RB2*RB3*RM1*RM3*RT2*RT3
 + CT1*CT2*RB3*RB4*RIN*RL*RM3*RT2*RT3 + CT1*CT2*RB2*RB4*RIN*RL*RM3*RT2*RT3
 + CT1*CT2*RB1*RB4*RIN*RL*RM3*RT2*RT3 + CT1*CT2*RB2*RB3*RIN*RL*RM3*RT2*RT3
 + CB1*CT2*RB2*RB3*RIN*RL*RM3*RT2*RT3 + CB1*CT1*RB2*RB3*RIN*RL*RM3*RT2*RT3
 + CB1*CT2*RB1*RB3*RIN*RL*RM3*RT2*RT3 + CB1*CT1*RB1*RB3*RIN*RL*RM3*RT2*RT3
 + CT1*CT2*RB1*RB2*RIN*RL*RM3*RT2*RT3 + CB1*CT2*RB2*RB3*RB4*RIN*RM3*RT2*RT3
 + CB1*CT1*RB2*RB3*RB4*RIN*RM3*RT2*RT3 + CB1*CT2*RB1*RB3*RB4*RIN*RM3*RT2*RT3
 + CB1*CT1*RB1*RB3*RB4*RIN*RM3*RT2*RT3 + CB1*CT2*RB1*RB2*RB3*RIN*RM3*RT2*RT3
 + CB1*CT1*RB1*RB2*RB3*RIN*RM3*RT2*RT3 + CT1*CT2*RB4*RIN*RL*RM1*RM2*RT2*RT3
 + CT1*CT2*RB3*RIN*RL*RM1*RM2*RT2*RT3 + CB1*CT2*RB2*RIN*RL*RM1*RM2*RT2*RT3
 + CB1*CT1*RB2*RIN*RL*RM1*RM2*RT2*RT3 + CT1*CT2*RB1*RIN*RL*RM1*RM2*RT2*RT3
 + CB1*CT2*RB1*RIN*RL*RM1*RM2*RT2*RT3 + CB1*CT1*RB1*RIN*RL*RM1*RM2*RT2*RT3
 + CT1*CT2*RB3*RB4*RL*RM1*RM2*RT2*RT3 + CT1*CT2*RB2*RB4*RL*RM1*RM2*RT2*RT3
 + CT1*CT2*RB1*RB4*RL*RM1*RM2*RT2*RT3 + CT1*CT2*RB2*RB3*RL*RM1*RM2*RT2*RT3
 + CB1*CT2*RB2*RB3*RL*RM1*RM2*RT2*RT3 + CB1*CT1*RB2*RB3*RL*RM1*RM2*RT2*RT3
 + CB1*CT2*RB1*RB3*RL*RM1*RM2*RT2*RT3 + CB1*CT1*RB1*RB3*RL*RM1*RM2*RT2*RT3
 + CT1*CT2*RB1*RB2*RL*RM1*RM2*RT2*RT3 + CT1*CT2*RB3*RB4*RIN*RM1*RM2*RT2*RT3
 + CT1*CT2*RB2*RB4*RIN*RM1*RM2*RT2*RT3 + CB1*CT2*RB2*RB4*RIN*RM1*RM2*RT2*RT3
 + CB1*CT1*RB2*RB4*RIN*RM1*RM2*RT2*RT3 + CT1*CT2*RB1*RB4*RIN*RM1*RM2*RT2*RT3
 + CB1*CT2*RB1*RB4*RIN*RM1*RM2*RT2*RT3 + CB1*CT1*RB1*RB4*RIN*RM1*RM2*RT2*RT3
 + CT1*CT2*RB2*RB3*RIN*RM1*RM2*RT2*RT3 + CT1*CT2*RB1*RB2*RIN*RM1*RM2*RT2*RT3
 + CB1*CT2*RB1*RB2*RIN*RM1*RM2*RT2*RT3 + CB1*CT1*RB1*RB2*RIN*RM1*RM2*RT2*RT3
 + CB1*CT2*RB2*RB3*RB4*RM1*RM2*RT2*RT3 + CB1*CT1*RB2*RB3*RB4*RM1*RM2*RT2*RT3
 + CB1*CT2*RB1*RB3*RB4*RM1*RM2*RT2*RT3 + CB1*CT1*RB1*RB3*RB4*RM1*RM2*RT2*RT3
 + CB1*CT2*RB1*RB2*RB3*RM1*RM2*RT2*RT3 + CB1*CT1*RB1*RB2*RB3*RM1*RM2*RT2*RT3
 + CB1*CT2*RB2*RB4*RIN*RL*RM2*RT2*RT3 + CB1*CT1*RB2*RB4*RIN*RL*RM2*RT2*RT3
 + CB1*CT2*RB1*RB4*RIN*RL*RM2*RT2*RT3 + CB1*CT1*RB1*RB4*RIN*RL*RM2*RT2*RT3
 + CB1*CT2*RB2*RB3*RIN*RL*RM2*RT2*RT3 + CB1*CT1*RB2*RB3*RIN*RL*RM2*RT2*RT3
 + CB1*CT2*RB1*RB3*RIN*RL*RM2*RT2*RT3 + CB1*CT1*RB1*RB3*RIN*RL*RM2*RT2*RT3
 + CB1*CT2*RB1*RB2*RIN*RL*RM2*RT2*RT3 + CB1*CT1*RB1*RB2*RIN*RL*RM2*RT2*RT3
 + CB1*CT2*RB2*RB3*RB4*RL*RM2*RT2*RT3 + CB1*CT1*RB2*RB3*RB4*RL*RM2*RT2*RT3
 + CB1*CT2*RB1*RB3*RB4*RL*RM2*RT2*RT3 + CB1*CT1*RB1*RB3*RB4*RL*RM2*RT2*RT3
 + CB1*CT2*RB1*RB2*RB3*RL*RM2*RT2*RT3 + CB1*CT1*RB1*RB2*RB3*RL*RM2*RT2*RT3
 + CB1*CT2*RB2*RB3*RB4*RIN*RM2*RT2*RT3 + CB1*CT1*RB2*RB3*RB4*RIN*RM2*RT2*RT3
 + CB1*CT2*RB1*RB3*RB4*RIN*RM2*RT2*RT3 + CB1*CT1*RB1*RB3*RB4*RIN*RM2*RT2*RT3
 + CB1*CT2*RB1*RB2*RB3*RIN*RM2*RT2*RT3 + CB1*CT1*RB1*RB2*RB3*RIN*RM2*RT2*RT3
 + CT1*CT2*RB3*RB4*RIN*RL*RM1*RT2*RT3 + CT1*CT2*RB2*RB4*RIN*RL*RM1*RT2*RT3
 + CB1*CT2*RB2*RB4*RIN*RL*RM1*RT2*RT3 + CB1*CT1*RB2*RB4*RIN*RL*RM1*RT2*RT3
 + CT1*CT2*RB1*RB4*RIN*RL*RM1*RT2*RT3 + CB1*CT2*RB1*RB4*RIN*RL*RM1*RT2*RT3
 + CB1*CT1*RB1*RB4*RIN*RL*RM1*RT2*RT3 + CT1*CT2*RB2*RB3*RIN*RL*RM1*RT2*RT3
 + CT1*CT2*RB1*RB2*RIN*RL*RM1*RT2*RT3 + CB1*CT2*RB1*RB2*RIN*RL*RM1*RT2*RT3
 + CB1*CT1*RB1*RB2*RIN*RL*RM1*RT2*RT3 + CB1*CT2*RB2*RB3*RB4*RL*RM1*RT2*RT3
 + CB1*CT1*RB2*RB3*RB4*RL*RM1*RT2*RT3 + CB1*CT2*RB1*RB3*RB4*RL*RM1*RT2*RT3
 + CB1*CT1*RB1*RB3*RB4*RL*RM1*RT2*RT3 + CB1*CT2*RB1*RB2*RB3*RL*RM1*RT2*RT3
 + CB1*CT1*RB1*RB2*RB3*RL*RM1*RT2*RT3 + CB1*CT2*RB2*RB3*RB4*RIN*RL*RT2*RT3
 + CB1*CT1*RB2*RB3*RB4*RIN*RL*RT2*RT3 + CB1*CT2*RB1*RB3*RB4*RIN*RL*RT2*RT3
 + CB1*CT1*RB1*RB3*RB4*RIN*RL*RT2*RT3 + CB1*CT2*RB1*RB2*RB3*RIN*RL*RT2*RT3
 + CB1*CT1*RB1*RB2*RB3*RIN*RL*RT2*RT3 + CT1*CT2*RB4*RIN*RL*RM2*RM3*RT1*RT3
 + CT1*CT2*RB2*RIN*RL*RM2*RM3*RT1*RT3 + CB1*CT1*RB2*RIN*RL*RM2*RM3*RT1*RT3
 + CB1*CT1*RB1*RIN*RL*RM2*RM3*RT1*RT3 + CT1*CT2*RB3*RB4*RL*RM2*RM3*RT1*RT3
 + CT1*CT2*RB2*RB4*RL*RM2*RM3*RT1*RT3 + CT1*CT2*RB1*RB4*RL*RM2*RM3*RT1*RT3
 + CT1*CT2*RB2*RB3*RL*RM2*RM3*RT1*RT3 + CB1*CT1*RB2*RB3*RL*RM2*RM3*RT1*RT3
 + CB1*CT1*RB1*RB3*RL*RM2*RM3*RT1*RT3 + CT1*CT2*RB1*RB2*RL*RM2*RM3*RT1*RT3
 + CB1*CT1*RB2*RB4*RIN*RM2*RM3*RT1*RT3 + CB1*CT1*RB1*RB4*RIN*RM2*RM3*RT1*RT3
 + CB1*CT1*RB1*RB2*RIN*RM2*RM3*RT1*RT3 + CB1*CT1*RB2*RB3*RB4*RM2*RM3*RT1*RT3
 + CB1*CT1*RB1*RB3*RB4*RM2*RM3*RT1*RT3 + CB1*CT1*RB1*RB2*RB3*RM2*RM3*RT1*RT3
 + CT1*CT2*RB4*RIN*RL*RM1*RM3*RT1*RT3 + CT1*CT2*RB2*RIN*RL*RM1*RM3*RT1*RT3
 + CB1*CT1*RB2*RIN*RL*RM1*RM3*RT1*RT3 + CB1*CT1*RB1*RIN*RL*RM1*RM3*RT1*RT3
 + CT1*CT2*RB3*RB4*RL*RM1*RM3*RT1*RT3 + CT1*CT2*RB2*RB4*RL*RM1*RM3*RT1*RT3
 + CT1*CT2*RB1*RB4*RL*RM1*RM3*RT1*RT3 + CT1*CT2*RB2*RB3*RL*RM1*RM3*RT1*RT3
 + CB1*CT1*RB2*RB3*RL*RM1*RM3*RT1*RT3 + CB1*CT1*RB1*RB3*RL*RM1*RM3*RT1*RT3
 + CT1*CT2*RB1*RB2*RL*RM1*RM3*RT1*RT3 + CB1*CT1*RB2*RB4*RIN*RM1*RM3*RT1*RT3
 + CB1*CT1*RB1*RB4*RIN*RM1*RM3*RT1*RT3 + CB1*CT1*RB1*RB2*RIN*RM1*RM3*RT1*RT3
 + CB1*CT1*RB2*RB3*RB4*RM1*RM3*RT1*RT3 + CB1*CT1*RB1*RB3*RB4*RM1*RM3*RT1*RT3
 + CB1*CT1*RB1*RB2*RB3*RM1*RM3*RT1*RT3 + CT1*CT2*RB3*RB4*RIN*RL*RM3*RT1*RT3
 + CT1*CT2*RB2*RB4*RIN*RL*RM3*RT1*RT3 + CT1*CT2*RB1*RB4*RIN*RL*RM3*RT1*RT3
 + CT1*CT2*RB2*RB3*RIN*RL*RM3*RT1*RT3 + CB1*CT1*RB2*RB3*RIN*RL*RM3*RT1*RT3
 + CB1*CT1*RB1*RB3*RIN*RL*RM3*RT1*RT3 + CT1*CT2*RB1*RB2*RIN*RL*RM3*RT1*RT3
 + CB1*CT1*RB2*RB3*RB4*RIN*RM3*RT1*RT3 + CB1*CT1*RB1*RB3*RB4*RIN*RM3*RT1*RT3
 + CB1*CT1*RB1*RB2*RB3*RIN*RM3*RT1*RT3 + CT1*CT2*RB4*RIN*RL*RM1*RM2*RT1*RT3
 + CT1*CT2*RB2*RIN*RL*RM1*RM2*RT1*RT3 + CB1*CT1*RB2*RIN*RL*RM1*RM2*RT1*RT3
 + CB1*CT1*RB1*RIN*RL*RM1*RM2*RT1*RT3 + CT1*CT2*RB3*RB4*RL*RM1*RM2*RT1*RT3
 + CT1*CT2*RB2*RB4*RL*RM1*RM2*RT1*RT3 + CT1*CT2*RB1*RB4*RL*RM1*RM2*RT1*RT3
 + CT1*CT2*RB2*RB3*RL*RM1*RM2*RT1*RT3 + CB1*CT1*RB2*RB3*RL*RM1*RM2*RT1*RT3
 + CB1*CT1*RB1*RB3*RL*RM1*RM2*RT1*RT3 + CT1*CT2*RB1*RB2*RL*RM1*RM2*RT1*RT3
 + CB1*CT1*RB2*RB4*RIN*RM1*RM2*RT1*RT3 + CB1*CT1*RB1*RB4*RIN*RM1*RM2*RT1*RT3
 + CB1*CT1*RB1*RB2*RIN*RM1*RM2*RT1*RT3 + CB1*CT1*RB2*RB3*RB4*RM1*RM2*RT1*RT3
 + CB1*CT1*RB1*RB3*RB4*RM1*RM2*RT1*RT3 + CB1*CT1*RB1*RB2*RB3*RM1*RM2*RT1*RT3
 + CT1*CT2*RB3*RB4*RIN*RL*RM2*RT1*RT3 + CT1*CT2*RB2*RB4*RIN*RL*RM2*RT1*RT3
 + CB1*CT1*RB2*RB4*RIN*RL*RM2*RT1*RT3 + CT1*CT2*RB1*RB4*RIN*RL*RM2*RT1*RT3
 + CB1*CT1*RB1*RB4*RIN*RL*RM2*RT1*RT3 + CT1*CT2*RB2*RB3*RIN*RL*RM2*RT1*RT3
 + CB1*CT1*RB2*RB3*RIN*RL*RM2*RT1*RT3 + CB1*CT1*RB1*RB3*RIN*RL*RM2*RT1*RT3
 + CT1*CT2*RB1*RB2*RIN*RL*RM2*RT1*RT3 + CB1*CT1*RB1*RB2*RIN*RL*RM2*RT1*RT3
 + CB1*CT1*RB2*RB3*RB4*RL*RM2*RT1*RT3 + CB1*CT1*RB1*RB3*RB4*RL*RM2*RT1*RT3
 + CB1*CT1*RB1*RB2*RB3*RL*RM2*RT1*RT3 + CB1*CT1*RB2*RB3*RB4*RIN*RM2*RT1*RT3
 + CB1*CT1*RB1*RB3*RB4*RIN*RM2*RT1*RT3 + CB1*CT1*RB1*RB2*RB3*RIN*RM2*RT1*RT3
 + CB1*CT1*RB2*RB4*RIN*RL*RM1*RT1*RT3 + CB1*CT1*RB1*RB4*RIN*RL*RM1*RT1*RT3
 + CB1*CT1*RB1*RB2*RIN*RL*RM1*RT1*RT3 + CB1*CT1*RB2*RB3*RB4*RL*RM1*RT1*RT3
 + CB1*CT1*RB1*RB3*RB4*RL*RM1*RT1*RT3 + CB1*CT1*RB1*RB2*RB3*RL*RM1*RT1*RT3
 + CB1*CT1*RB2*RB3*RB4*RIN*RL*RT1*RT3 + CB1*CT1*RB1*RB3*RB4*RIN*RL*RT1*RT3
 + CB1*CT1*RB1*RB2*RB3*RIN*RL*RT1*RT3 + CT1*CT2*RB3*RB4*RIN*RL*RM2*RM3*RT3
 + CT1*CT2*RB2*RB4*RIN*RL*RM2*RM3*RT3 + CB1*CT2*RB2*RB4*RIN*RL*RM2*RM3*RT3
 + CT1*CT2*RB1*RB4*RIN*RL*RM2*RM3*RT3 + CB1*CT2*RB1*RB4*RIN*RL*RM2*RM3*RT3
 + CT1*CT2*RB2*RB3*RIN*RL*RM2*RM3*RT3 + CB1*CT1*RB2*RB3*RIN*RL*RM2*RM3*RT3
 + CB1*CT1*RB1*RB3*RIN*RL*RM2*RM3*RT3 + CT1*CT2*RB1*RB2*RIN*RL*RM2*RM3*RT3
 + CB1*CT2*RB1*RB2*RIN*RL*RM2*RM3*RT3 + CB1*CT2*RB2*RB3*RB4*RL*RM2*RM3*RT3
 + CB1*CT2*RB1*RB3*RB4*RL*RM2*RM3*RT3 + CB1*CT2*RB1*RB2*RB3*RL*RM2*RM3*RT3
 + CB1*CT1*RB2*RB3*RB4*RIN*RM2*RM3*RT3 + CB1*CT1*RB1*RB3*RB4*RIN*RM2*RM3*RT3
 + CB1*CT1*RB1*RB2*RB3*RIN*RM2*RM3*RT3 + CT1*CT2*RB3*RB4*RIN*RL*RM1*RM3*RT3
 + CT1*CT2*RB2*RB4*RIN*RL*RM1*RM3*RT3 + CB1*CT2*RB2*RB4*RIN*RL*RM1*RM3*RT3
 + CT1*CT2*RB1*RB4*RIN*RL*RM1*RM3*RT3 + CB1*CT2*RB1*RB4*RIN*RL*RM1*RM3*RT3
 + CT1*CT2*RB2*RB3*RIN*RL*RM1*RM3*RT3 + CB1*CT1*RB2*RB3*RIN*RL*RM1*RM3*RT3
 + CB1*CT1*RB1*RB3*RIN*RL*RM1*RM3*RT3 + CT1*CT2*RB1*RB2*RIN*RL*RM1*RM3*RT3
 + CB1*CT2*RB1*RB2*RIN*RL*RM1*RM3*RT3 + CB1*CT2*RB2*RB3*RB4*RL*RM1*RM3*RT3
 + CB1*CT2*RB1*RB3*RB4*RL*RM1*RM3*RT3 + CB1*CT2*RB1*RB2*RB3*RL*RM1*RM3*RT3
 + CB1*CT1*RB2*RB3*RB4*RIN*RM1*RM3*RT3 + CB1*CT1*RB1*RB3*RB4*RIN*RM1*RM3*RT3
 + CB1*CT1*RB1*RB2*RB3*RIN*RM1*RM3*RT3 + CB1*CT2*RB2*RB3*RB4*RIN*RL*RM3*RT3
 + CB1*CT2*RB1*RB3*RB4*RIN*RL*RM3*RT3 + CB1*CT2*RB1*RB2*RB3*RIN*RL*RM3*RT3
 + CT1*CT2*RB3*RB4*RIN*RL*RM1*RM2*RT3 + CT1*CT2*RB2*RB4*RIN*RL*RM1*RM2*RT3
 + CB1*CT2*RB2*RB4*RIN*RL*RM1*RM2*RT3 + CT1*CT2*RB1*RB4*RIN*RL*RM1*RM2*RT3
 + CB1*CT2*RB1*RB4*RIN*RL*RM1*RM2*RT3 + CT1*CT2*RB2*RB3*RIN*RL*RM1*RM2*RT3
 + CB1*CT1*RB2*RB3*RIN*RL*RM1*RM2*RT3 + CB1*CT1*RB1*RB3*RIN*RL*RM1*RM2*RT3
 + CT1*CT2*RB1*RB2*RIN*RL*RM1*RM2*RT3 + CB1*CT2*RB1*RB2*RIN*RL*RM1*RM2*RT3
 + CB1*CT2*RB2*RB3*RB4*RL*RM1*RM2*RT3 + CB1*CT2*RB1*RB3*RB4*RL*RM1*RM2*RT3
 + CB1*CT2*RB1*RB2*RB3*RL*RM1*RM2*RT3 + CB1*CT1*RB2*RB3*RB4*RIN*RM1*RM2*RT3
 + CB1*CT1*RB1*RB3*RB4*RIN*RM1*RM2*RT3 + CB1*CT1*RB1*RB2*RB3*RIN*RM1*RM2*RT3
 + CB1*CT2*RB2*RB3*RB4*RIN*RL*RM2*RT3 + CB1*CT1*RB2*RB3*RB4*RIN*RL*RM2*RT3
 + CB1*CT2*RB1*RB3*RB4*RIN*RL*RM2*RT3 + CB1*CT1*RB1*RB3*RB4*RIN*RL*RM2*RT3
 + CB1*CT2*RB1*RB2*RB3*RIN*RL*RM2*RT3 + CB1*CT1*RB1*RB2*RB3*RIN*RL*RM2*RT3
 + CB1*CT1*RB2*RB3*RB4*RIN*RL*RM1*RT3 + CB1*CT1*RB1*RB3*RB4*RIN*RL*RM1*RT3
 + CB1*CT1*RB1*RB2*RB3*RIN*RL*RM1*RT3 + CB1*CT1*RB2*RIN*RL*RM2*RM3*RT1*RT2
 + CB1*CT1*RB1*RIN*RL*RM2*RM3*RT1*RT2 + CB1*CT1*RB2*RB3*RL*RM2*RM3*RT1*RT2
 + CB1*CT1*RB1*RB3*RL*RM2*RM3*RT1*RT2 + CB1*CT1*RB2*RB4*RIN*RM2*RM3*RT1*RT2
 + CB1*CT1*RB1*RB4*RIN*RM2*RM3*RT1*RT2 + CB1*CT1*RB1*RB2*RIN*RM2*RM3*RT1*RT2
 + CB1*CT1*RB2*RB3*RB4*RM2*RM3*RT1*RT2 + CB1*CT1*RB1*RB3*RB4*RM2*RM3*RT1*RT2
 + CB1*CT1*RB1*RB2*RB3*RM2*RM3*RT1*RT2 + CB1*CT1*RB2*RIN*RL*RM1*RM3*RT1*RT2
 + CB1*CT1*RB1*RIN*RL*RM1*RM3*RT1*RT2 + CB1*CT1*RB2*RB3*RL*RM1*RM3*RT1*RT2
 + CB1*CT1*RB1*RB3*RL*RM1*RM3*RT1*RT2 + CB1*CT1*RB2*RB4*RIN*RM1*RM3*RT1*RT2
 + CB1*CT1*RB1*RB4*RIN*RM1*RM3*RT1*RT2 + CB1*CT1*RB1*RB2*RIN*RM1*RM3*RT1*RT2
 + CB1*CT1*RB2*RB3*RB4*RM1*RM3*RT1*RT2 + CB1*CT1*RB1*RB3*RB4*RM1*RM3*RT1*RT2
 + CB1*CT1*RB1*RB2*RB3*RM1*RM3*RT1*RT2 + CB1*CT1*RB2*RB3*RIN*RL*RM3*RT1*RT2
 + CB1*CT1*RB1*RB3*RIN*RL*RM3*RT1*RT2 + CB1*CT1*RB2*RB3*RB4*RIN*RM3*RT1*RT2
 + CB1*CT1*RB1*RB3*RB4*RIN*RM3*RT1*RT2 + CB1*CT1*RB1*RB2*RB3*RIN*RM3*RT1*RT2
 + CB1*CT1*RB2*RIN*RL*RM1*RM2*RT1*RT2 + CB1*CT1*RB1*RIN*RL*RM1*RM2*RT1*RT2
 + CB1*CT1*RB2*RB3*RL*RM1*RM2*RT1*RT2 + CB1*CT1*RB1*RB3*RL*RM1*RM2*RT1*RT2
 + CB1*CT1*RB2*RB4*RIN*RM1*RM2*RT1*RT2 + CB1*CT1*RB1*RB4*RIN*RM1*RM2*RT1*RT2
 + CB1*CT1*RB1*RB2*RIN*RM1*RM2*RT1*RT2 + CB1*CT1*RB2*RB3*RB4*RM1*RM2*RT1*RT2
 + CB1*CT1*RB1*RB3*RB4*RM1*RM2*RT1*RT2 + CB1*CT1*RB1*RB2*RB3*RM1*RM2*RT1*RT2
 + CB1*CT1*RB2*RB4*RIN*RL*RM2*RT1*RT2 + CB1*CT1*RB1*RB4*RIN*RL*RM2*RT1*RT2
 + CB1*CT1*RB2*RB3*RIN*RL*RM2*RT1*RT2 + CB1*CT1*RB1*RB3*RIN*RL*RM2*RT1*RT2
 + CB1*CT1*RB1*RB2*RIN*RL*RM2*RT1*RT2 + CB1*CT1*RB2*RB3*RB4*RL*RM2*RT1*RT2
 + CB1*CT1*RB1*RB3*RB4*RL*RM2*RT1*RT2 + CB1*CT1*RB1*RB2*RB3*RL*RM2*RT1*RT2
 + CB1*CT1*RB2*RB3*RB4*RIN*RM2*RT1*RT2 + CB1*CT1*RB1*RB3*RB4*RIN*RM2*RT1*RT2
 + CB1*CT1*RB1*RB2*RB3*RIN*RM2*RT1*RT2 + CB1*CT1*RB2*RB4*RIN*RL*RM1*RT1*RT2
 + CB1*CT1*RB1*RB4*RIN*RL*RM1*RT1*RT2 + CB1*CT1*RB1*RB2*RIN*RL*RM1*RT1*RT2
 + CB1*CT1*RB2*RB3*RB4*RL*RM1*RT1*RT2 + CB1*CT1*RB1*RB3*RB4*RL*RM1*RT1*RT2
 + CB1*CT1*RB1*RB2*RB3*RL*RM1*RT1*RT2 + CB1*CT1*RB2*RB3*RB4*RIN*RL*RT1*RT2
 + CB1*CT1*RB1*RB3*RB4*RIN*RL*RT1*RT2 + CB1*CT1*RB1*RB2*RB3*RIN*RL*RT1*RT2
 + CB1*CT1*RB2*RB4*RIN*RL*RM2*RM3*RT2 + CB1*CT1*RB1*RB4*RIN*RL*RM2*RM3*RT2
 + CB1*CT1*RB2*RB3*RIN*RL*RM2*RM3*RT2 + CB1*CT1*RB1*RB3*RIN*RL*RM2*RM3*RT2
 + CB1*CT1*RB1*RB2*RIN*RL*RM2*RM3*RT2 + CB1*CT1*RB2*RB3*RB4*RL*RM2*RM3*RT2
 + CB1*CT1*RB1*RB3*RB4*RL*RM2*RM3*RT2 + CB1*CT1*RB1*RB2*RB3*RL*RM2*RM3*RT2
 + CB1*CT1*RB2*RB3*RB4*RIN*RM2*RM3*RT2 + CB1*CT1*RB1*RB3*RB4*RIN*RM2*RM3*RT2
 + CB1*CT1*RB1*RB2*RB3*RIN*RM2*RM3*RT2 + CB1*CT1*RB2*RB4*RIN*RL*RM1*RM3*RT2
 + CB1*CT1*RB1*RB4*RIN*RL*RM1*RM3*RT2 + CB1*CT1*RB2*RB3*RIN*RL*RM1*RM3*RT2
 + CB1*CT1*RB1*RB3*RIN*RL*RM1*RM3*RT2 + CB1*CT1*RB1*RB2*RIN*RL*RM1*RM3*RT2
 + CB1*CT1*RB2*RB3*RB4*RL*RM1*RM3*RT2 + CB1*CT1*RB1*RB3*RB4*RL*RM1*RM3*RT2
 + CB1*CT1*RB1*RB2*RB3*RL*RM1*RM3*RT2 + CB1*CT1*RB2*RB3*RB4*RIN*RM1*RM3*RT2
 + CB1*CT1*RB1*RB3*RB4*RIN*RM1*RM3*RT2 + CB1*CT1*RB1*RB2*RB3*RIN*RM1*RM3*RT2
 + CB1*CT1*RB2*RB3*RB4*RIN*RL*RM3*RT2 + CB1*CT1*RB1*RB3*RB4*RIN*RL*RM3*RT2
 + CB1*CT1*RB1*RB2*RB3*RIN*RL*RM3*RT2 + CB1*CT1*RB2*RB4*RIN*RL*RM1*RM2*RT2
 + CB1*CT1*RB1*RB4*RIN*RL*RM1*RM2*RT2 + CB1*CT1*RB2*RB3*RIN*RL*RM1*RM2*RT2
 + CB1*CT1*RB1*RB3*RIN*RL*RM1*RM2*RT2 + CB1*CT1*RB1*RB2*RIN*RL*RM1*RM2*RT2
 + CB1*CT1*RB2*RB3*RB4*RL*RM1*RM2*RT2 + CB1*CT1*RB1*RB3*RB4*RL*RM1*RM2*RT2
 + CB1*CT1*RB1*RB2*RB3*RL*RM1*RM2*RT2 + CB1*CT1*RB2*RB3*RB4*RIN*RM1*RM2*RT2
 + CB1*CT1*RB1*RB3*RB4*RIN*RM1*RM2*RT2 + CB1*CT1*RB1*RB2*RB3*RIN*RM1*RM2*RT2
 + CB1*CT1*RB2*RB3*RB4*RIN*RL*RM1*RT2 + CB1*CT1*RB1*RB3*RB4*RIN*RL*RM1*RT2
 + CB1*CT1*RB1*RB2*RB3*RIN*RL*RM1*RT2 + CB1*CT1*RB2*RB4*RIN*RL*RM2*RM3*RT1
 + CB1*CT1*RB1*RB4*RIN*RL*RM2*RM3*RT1 + CB1*CT1*RB1*RB2*RIN*RL*RM2*RM3*RT1
 + CB1*CT1*RB2*RB3*RB4*RL*RM2*RM3*RT1 + CB1*CT1*RB1*RB3*RB4*RL*RM2*RM3*RT1
 + CB1*CT1*RB1*RB2*RB3*RL*RM2*RM3*RT1 + CB1*CT1*RB2*RB4*RIN*RL*RM1*RM3*RT1
 + CB1*CT1*RB1*RB4*RIN*RL*RM1*RM3*RT1 + CB1*CT1*RB1*RB2*RIN*RL*RM1*RM3*RT1
 + CB1*CT1*RB2*RB3*RB4*RL*RM1*RM3*RT1 + CB1*CT1*RB1*RB3*RB4*RL*RM1*RM3*RT1
 + CB1*CT1*RB1*RB2*RB3*RL*RM1*RM3*RT1 + CB1*CT1*RB2*RB3*RB4*RIN*RL*RM3*RT1
 + CB1*CT1*RB1*RB3*RB4*RIN*RL*RM3*RT1 + CB1*CT1*RB1*RB2*RB3*RIN*RL*RM3*RT1
 + CB1*CT1*RB2*RB4*RIN*RL*RM1*RM2*RT1 + CB1*CT1*RB1*RB4*RIN*RL*RM1*RM2*RT1
 + CB1*CT1*RB1*RB2*RIN*RL*RM1*RM2*RT1 + CB1*CT1*RB2*RB3*RB4*RL*RM1*RM2*RT1
 + CB1*CT1*RB1*RB3*RB4*RL*RM1*RM2*RT1 + CB1*CT1*RB1*RB2*RB3*RL*RM1*RM2*RT1
 + CB1*CT1*RB2*RB3*RB4*RIN*RL*RM2*RT1 + CB1*CT1*RB1*RB3*RB4*RIN*RL*RM2*RT1
 + CB1*CT1*RB1*RB2*RB3*RIN*RL*RM2*RT1 + CB1*CT1*RB2*RB3*RB4*RIN*RL*RM2*RM3
 + CB1*CT1*RB1*RB3*RB4*RIN*RL*RM2*RM3 + CB1*CT1*RB1*RB2*RB3*RIN*RL*RM2*RM3
 + CB1*CT1*RB2*RB3*RB4*RIN*RL*RM1*RM3 + CB1*CT1*RB1*RB3*RB4*RIN*RL*RM1*RM3
 + CB1*CT1*RB1*RB2*RB3*RIN*RL*RM1*RM3 + CB1*CT1*RB2*RB3*RB4*RIN*RL*RM1*RM2
 + CB1*CT1*RB1*RB3*RB4*RIN*RL*RM1*RM2 + CB1*CT1*RB1*RB2*RB3*RIN*RL*RM1*RM2;

var DEN_CIm = CT2*RIN*RL*RM2*RM3*RT2*RT3 + CT1*RIN*RL*RM2*RM3*RT2*RT3
 + CT2*RB3*RL*RM2*RM3*RT2*RT3 + CT1*RB3*RL*RM2*RM3*RT2*RT3
 + CT2*RB2*RL*RM2*RM3*RT2*RT3 + CT1*RB2*RL*RM2*RM3*RT2*RT3
 + CT2*RB1*RL*RM2*RM3*RT2*RT3 + CT1*RB1*RL*RM2*RM3*RT2*RT3
 + CT2*RB4*RIN*RM2*RM3*RT2*RT3 + CT1*RB4*RIN*RM2*RM3*RT2*RT3
 + CT2*RB2*RIN*RM2*RM3*RT2*RT3 + CT1*RB2*RIN*RM2*RM3*RT2*RT3
 + CT2*RB3*RB4*RM2*RM3*RT2*RT3 + CT1*RB3*RB4*RM2*RM3*RT2*RT3
 + CT2*RB2*RB4*RM2*RM3*RT2*RT3 + CT1*RB2*RB4*RM2*RM3*RT2*RT3
 + CT2*RB1*RB4*RM2*RM3*RT2*RT3 + CT1*RB1*RB4*RM2*RM3*RT2*RT3
 + CT2*RB2*RB3*RM2*RM3*RT2*RT3 + CT1*RB2*RB3*RM2*RM3*RT2*RT3
 + CT2*RB1*RB2*RM2*RM3*RT2*RT3 + CT1*RB1*RB2*RM2*RM3*RT2*RT3
 + CT2*RIN*RL*RM1*RM3*RT2*RT3 + CT1*RIN*RL*RM1*RM3*RT2*RT3
 + CT2*RB3*RL*RM1*RM3*RT2*RT3 + CT1*RB3*RL*RM1*RM3*RT2*RT3
 + CT2*RB2*RL*RM1*RM3*RT2*RT3 + CT1*RB2*RL*RM1*RM3*RT2*RT3
 + CT2*RB1*RL*RM1*RM3*RT2*RT3 + CT1*RB1*RL*RM1*RM3*RT2*RT3
 + CT2*RB4*RIN*RM1*RM3*RT2*RT3 + CT1*RB4*RIN*RM1*RM3*RT2*RT3
 + CT2*RB2*RIN*RM1*RM3*RT2*RT3 + CT1*RB2*RIN*RM1*RM3*RT2*RT3
 + CT2*RB3*RB4*RM1*RM3*RT2*RT3 + CT1*RB3*RB4*RM1*RM3*RT2*RT3
 + CT2*RB2*RB4*RM1*RM3*RT2*RT3 + CT1*RB2*RB4*RM1*RM3*RT2*RT3
 + CT2*RB1*RB4*RM1*RM3*RT2*RT3 + CT1*RB1*RB4*RM1*RM3*RT2*RT3
 + CT2*RB2*RB3*RM1*RM3*RT2*RT3 + CT1*RB2*RB3*RM1*RM3*RT2*RT3
 + CT2*RB1*RB2*RM1*RM3*RT2*RT3 + CT1*RB1*RB2*RM1*RM3*RT2*RT3
 + CT2*RB3*RIN*RL*RM3*RT2*RT3 + CT1*RB3*RIN*RL*RM3*RT2*RT3
 + CT2*RB2*RIN*RL*RM3*RT2*RT3 + CT1*RB2*RIN*RL*RM3*RT2*RT3
 + CT2*RB1*RIN*RL*RM3*RT2*RT3 + CT1*RB1*RIN*RL*RM3*RT2*RT3
 + CT2*RB3*RB4*RIN*RM3*RT2*RT3 + CT1*RB3*RB4*RIN*RM3*RT2*RT3
 + CT2*RB2*RB4*RIN*RM3*RT2*RT3 + CT1*RB2*RB4*RIN*RM3*RT2*RT3
 + CT2*RB1*RB4*RIN*RM3*RT2*RT3 + CT1*RB1*RB4*RIN*RM3*RT2*RT3
 + CT2*RB2*RB3*RIN*RM3*RT2*RT3 + CT1*RB2*RB3*RIN*RM3*RT2*RT3
 + CT2*RB1*RB2*RIN*RM3*RT2*RT3 + CT1*RB1*RB2*RIN*RM3*RT2*RT3
 + CT2*RIN*RL*RM1*RM2*RT2*RT3 + CT1*RIN*RL*RM1*RM2*RT2*RT3
 + CT2*RB3*RL*RM1*RM2*RT2*RT3 + CT1*RB3*RL*RM1*RM2*RT2*RT3
 + CT2*RB2*RL*RM1*RM2*RT2*RT3 + CT1*RB2*RL*RM1*RM2*RT2*RT3
 + CT2*RB1*RL*RM1*RM2*RT2*RT3 + CT1*RB1*RL*RM1*RM2*RT2*RT3
 + CT2*RB4*RIN*RM1*RM2*RT2*RT3 + CT1*RB4*RIN*RM1*RM2*RT2*RT3
 + CT2*RB2*RIN*RM1*RM2*RT2*RT3 + CT1*RB2*RIN*RM1*RM2*RT2*RT3
 + CT2*RB3*RB4*RM1*RM2*RT2*RT3 + CT1*RB3*RB4*RM1*RM2*RT2*RT3
 + CT2*RB2*RB4*RM1*RM2*RT2*RT3 + CT1*RB2*RB4*RM1*RM2*RT2*RT3
 + CT2*RB1*RB4*RM1*RM2*RT2*RT3 + CT1*RB1*RB4*RM1*RM2*RT2*RT3
 + CT2*RB2*RB3*RM1*RM2*RT2*RT3 + CT1*RB2*RB3*RM1*RM2*RT2*RT3
 + CT2*RB1*RB2*RM1*RM2*RT2*RT3 + CT1*RB1*RB2*RM1*RM2*RT2*RT3
 + CT2*RB4*RIN*RL*RM2*RT2*RT3 + CT1*RB4*RIN*RL*RM2*RT2*RT3
 + CT2*RB3*RIN*RL*RM2*RT2*RT3 + CT1*RB3*RIN*RL*RM2*RT2*RT3
 + CT2*RB1*RIN*RL*RM2*RT2*RT3 + CT1*RB1*RIN*RL*RM2*RT2*RT3
 + CT2*RB3*RB4*RL*RM2*RT2*RT3 + CT1*RB3*RB4*RL*RM2*RT2*RT3
 + CT2*RB2*RB4*RL*RM2*RT2*RT3 + CT1*RB2*RB4*RL*RM2*RT2*RT3
 + CT2*RB1*RB4*RL*RM2*RT2*RT3 + CT1*RB1*RB4*RL*RM2*RT2*RT3
 + CT2*RB2*RB3*RL*RM2*RT2*RT3 + CT1*RB2*RB3*RL*RM2*RT2*RT3
 + CT2*RB1*RB2*RL*RM2*RT2*RT3 + CT1*RB1*RB2*RL*RM2*RT2*RT3
 + CT2*RB3*RB4*RIN*RM2*RT2*RT3 + CT1*RB3*RB4*RIN*RM2*RT2*RT3
 + CT2*RB2*RB4*RIN*RM2*RT2*RT3 + CT1*RB2*RB4*RIN*RM2*RT2*RT3
 + CT2*RB1*RB4*RIN*RM2*RT2*RT3 + CT1*RB1*RB4*RIN*RM2*RT2*RT3
 + CT2*RB2*RB3*RIN*RM2*RT2*RT3 + CT1*RB2*RB3*RIN*RM2*RT2*RT3
 + CT2*RB1*RB2*RIN*RM2*RT2*RT3 + CT1*RB1*RB2*RIN*RM2*RT2*RT3
 + CT2*RB4*RIN*RL*RM1*RT2*RT3 + CT1*RB4*RIN*RL*RM1*RT2*RT3
 + CT2*RB2*RIN*RL*RM1*RT2*RT3 + CT1*RB2*RIN*RL*RM1*RT2*RT3
 + CT2*RB3*RB4*RL*RM1*RT2*RT3 + CT1*RB3*RB4*RL*RM1*RT2*RT3
 + CT2*RB2*RB4*RL*RM1*RT2*RT3 + CT1*RB2*RB4*RL*RM1*RT2*RT3
 + CT2*RB1*RB4*RL*RM1*RT2*RT3 + CT1*RB1*RB4*RL*RM1*RT2*RT3
 + CT2*RB2*RB3*RL*RM1*RT2*RT3 + CT1*RB2*RB3*RL*RM1*RT2*RT3
 + CT2*RB1*RB2*RL*RM1*RT2*RT3 + CT1*RB1*RB2*RL*RM1*RT2*RT3
 + CT2*RB3*RB4*RIN*RL*RT2*RT3 + CT1*RB3*RB4*RIN*RL*RT2*RT3
 + CT2*RB2*RB4*RIN*RL*RT2*RT3 + CT1*RB2*RB4*RIN*RL*RT2*RT3
 + CT2*RB1*RB4*RIN*RL*RT2*RT3 + CT1*RB1*RB4*RIN*RL*RT2*RT3
 + CT2*RB2*RB3*RIN*RL*RT2*RT3 + CT1*RB2*RB3*RIN*RL*RT2*RT3
 + CT2*RB1*RB2*RIN*RL*RT2*RT3 + CT1*RB1*RB2*RIN*RL*RT2*RT3
 + CT1*RIN*RL*RM2*RM3*RT1*RT3 + CT1*RB3*RL*RM2*RM3*RT1*RT3
 + CT1*RB2*RL*RM2*RM3*RT1*RT3 + CT1*RB1*RL*RM2*RM3*RT1*RT3
 + CT1*RB4*RIN*RM2*RM3*RT1*RT3 + CT1*RB2*RIN*RM2*RM3*RT1*RT3
 + CT1*RB3*RB4*RM2*RM3*RT1*RT3 + CT1*RB2*RB4*RM2*RM3*RT1*RT3
 + CT1*RB1*RB4*RM2*RM3*RT1*RT3 + CT1*RB2*RB3*RM2*RM3*RT1*RT3
 + CT1*RB1*RB2*RM2*RM3*RT1*RT3 + CT1*RIN*RL*RM1*RM3*RT1*RT3
 + CT1*RB3*RL*RM1*RM3*RT1*RT3 + CT1*RB2*RL*RM1*RM3*RT1*RT3
 + CT1*RB1*RL*RM1*RM3*RT1*RT3 + CT1*RB4*RIN*RM1*RM3*RT1*RT3
 + CT1*RB2*RIN*RM1*RM3*RT1*RT3 + CT1*RB3*RB4*RM1*RM3*RT1*RT3
 + CT1*RB2*RB4*RM1*RM3*RT1*RT3 + CT1*RB1*RB4*RM1*RM3*RT1*RT3
 + CT1*RB2*RB3*RM1*RM3*RT1*RT3 + CT1*RB1*RB2*RM1*RM3*RT1*RT3
 + CT1*RB3*RIN*RL*RM3*RT1*RT3 + CT1*RB2*RIN*RL*RM3*RT1*RT3
 + CT1*RB1*RIN*RL*RM3*RT1*RT3 + CT1*RB3*RB4*RIN*RM3*RT1*RT3
 + CT1*RB2*RB4*RIN*RM3*RT1*RT3 + CT1*RB1*RB4*RIN*RM3*RT1*RT3
 + CT1*RB2*RB3*RIN*RM3*RT1*RT3 + CT1*RB1*RB2*RIN*RM3*RT1*RT3
 + CT1*RIN*RL*RM1*RM2*RT1*RT3 + CT1*RB3*RL*RM1*RM2*RT1*RT3
 + CT1*RB2*RL*RM1*RM2*RT1*RT3 + CT1*RB1*RL*RM1*RM2*RT1*RT3
 + CT1*RB4*RIN*RM1*RM2*RT1*RT3 + CT1*RB2*RIN*RM1*RM2*RT1*RT3
 + CT1*RB3*RB4*RM1*RM2*RT1*RT3 + CT1*RB2*RB4*RM1*RM2*RT1*RT3
 + CT1*RB1*RB4*RM1*RM2*RT1*RT3 + CT1*RB2*RB3*RM1*RM2*RT1*RT3
 + CT1*RB1*RB2*RM1*RM2*RT1*RT3 + CT1*RB4*RIN*RL*RM2*RT1*RT3
 + CT1*RB3*RIN*RL*RM2*RT1*RT3 + CT1*RB1*RIN*RL*RM2*RT1*RT3
 + CT1*RB3*RB4*RL*RM2*RT1*RT3 + CT1*RB2*RB4*RL*RM2*RT1*RT3
 + CT1*RB1*RB4*RL*RM2*RT1*RT3 + CT1*RB2*RB3*RL*RM2*RT1*RT3
 + CT1*RB1*RB2*RL*RM2*RT1*RT3 + CT1*RB3*RB4*RIN*RM2*RT1*RT3
 + CT1*RB2*RB4*RIN*RM2*RT1*RT3 + CT1*RB1*RB4*RIN*RM2*RT1*RT3
 + CT1*RB2*RB3*RIN*RM2*RT1*RT3 + CT1*RB1*RB2*RIN*RM2*RT1*RT3
 + CT1*RB4*RIN*RL*RM1*RT1*RT3 + CT1*RB2*RIN*RL*RM1*RT1*RT3
 + CT1*RB3*RB4*RL*RM1*RT1*RT3 + CT1*RB2*RB4*RL*RM1*RT1*RT3
 + CT1*RB1*RB4*RL*RM1*RT1*RT3 + CT1*RB2*RB3*RL*RM1*RT1*RT3
 + CT1*RB1*RB2*RL*RM1*RT1*RT3 + CT1*RB3*RB4*RIN*RL*RT1*RT3
 + CT1*RB2*RB4*RIN*RL*RT1*RT3 + CT1*RB1*RB4*RIN*RL*RT1*RT3
 + CT1*RB2*RB3*RIN*RL*RT1*RT3 + CT1*RB1*RB2*RIN*RL*RT1*RT3
 + CT2*RB4*RIN*RL*RM2*RM3*RT3 + CT1*RB3*RIN*RL*RM2*RM3*RT3
 + CT2*RB2*RIN*RL*RM2*RM3*RT3 + CT1*RB2*RIN*RL*RM2*RM3*RT3
 + CB1*RB2*RIN*RL*RM2*RM3*RT3 + CT1*RB1*RIN*RL*RM2*RM3*RT3
 + CB1*RB1*RIN*RL*RM2*RM3*RT3 + CT2*RB3*RB4*RL*RM2*RM3*RT3
 + CT2*RB2*RB4*RL*RM2*RM3*RT3 + CT2*RB1*RB4*RL*RM2*RM3*RT3
 + CT2*RB2*RB3*RL*RM2*RM3*RT3 + CB1*RB2*RB3*RL*RM2*RM3*RT3
 + CB1*RB1*RB3*RL*RM2*RM3*RT3 + CT2*RB1*RB2*RL*RM2*RM3*RT3
 + CT1*RB3*RB4*RIN*RM2*RM3*RT3 + CT1*RB2*RB4*RIN*RM2*RM3*RT3
 + CB1*RB2*RB4*RIN*RM2*RM3*RT3 + CT1*RB1*RB4*RIN*RM2*RM3*RT3
 + CB1*RB1*RB4*RIN*RM2*RM3*RT3 + CT1*RB2*RB3*RIN*RM2*RM3*RT3
 + CT1*RB1*RB2*RIN*RM2*RM3*RT3 + CB1*RB1*RB2*RIN*RM2*RM3*RT3
 + CB1*RB2*RB3*RB4*RM2*RM3*RT3 + CB1*RB1*RB3*RB4*RM2*RM3*RT3
 + CB1*RB1*RB2*RB3*RM2*RM3*RT3 + CT2*RB4*RIN*RL*RM1*RM3*RT3
 + CT1*RB3*RIN*RL*RM1*RM3*RT3 + CT2*RB2*RIN*RL*RM1*RM3*RT3
 + CT1*RB2*RIN*RL*RM1*RM3*RT3 + CB1*RB2*RIN*RL*RM1*RM3*RT3
 + CT1*RB1*RIN*RL*RM1*RM3*RT3 + CB1*RB1*RIN*RL*RM1*RM3*RT3
 + CT2*RB3*RB4*RL*RM1*RM3*RT3 + CT2*RB2*RB4*RL*RM1*RM3*RT3
 + CT2*RB1*RB4*RL*RM1*RM3*RT3 + CT2*RB2*RB3*RL*RM1*RM3*RT3
 + CB1*RB2*RB3*RL*RM1*RM3*RT3 + CB1*RB1*RB3*RL*RM1*RM3*RT3
 + CT2*RB1*RB2*RL*RM1*RM3*RT3 + CT1*RB3*RB4*RIN*RM1*RM3*RT3
 + CT1*RB2*RB4*RIN*RM1*RM3*RT3 + CB1*RB2*RB4*RIN*RM1*RM3*RT3
 + CT1*RB1*RB4*RIN*RM1*RM3*RT3 + CB1*RB1*RB4*RIN*RM1*RM3*RT3
 + CT1*RB2*RB3*RIN*RM1*RM3*RT3 + CT1*RB1*RB2*RIN*RM1*RM3*RT3
 + CB1*RB1*RB2*RIN*RM1*RM3*RT3 + CB1*RB2*RB3*RB4*RM1*RM3*RT3
 + CB1*RB1*RB3*RB4*RM1*RM3*RT3 + CB1*RB1*RB2*RB3*RM1*RM3*RT3
 + CT2*RB3*RB4*RIN*RL*RM3*RT3 + CT2*RB2*RB4*RIN*RL*RM3*RT3
 + CT2*RB1*RB4*RIN*RL*RM3*RT3 + CT2*RB2*RB3*RIN*RL*RM3*RT3
 + CB1*RB2*RB3*RIN*RL*RM3*RT3 + CB1*RB1*RB3*RIN*RL*RM3*RT3
 + CT2*RB1*RB2*RIN*RL*RM3*RT3 + CB1*RB2*RB3*RB4*RIN*RM3*RT3
 + CB1*RB1*RB3*RB4*RIN*RM3*RT3 + CB1*RB1*RB2*RB3*RIN*RM3*RT3
 + CT2*RB4*RIN*RL*RM1*RM2*RT3 + CT1*RB3*RIN*RL*RM1*RM2*RT3
 + CT2*RB2*RIN*RL*RM1*RM2*RT3 + CT1*RB2*RIN*RL*RM1*RM2*RT3
 + CB1*RB2*RIN*RL*RM1*RM2*RT3 + CT1*RB1*RIN*RL*RM1*RM2*RT3
 + CB1*RB1*RIN*RL*RM1*RM2*RT3 + CT2*RB3*RB4*RL*RM1*RM2*RT3
 + CT2*RB2*RB4*RL*RM1*RM2*RT3 + CT2*RB1*RB4*RL*RM1*RM2*RT3
 + CT2*RB2*RB3*RL*RM1*RM2*RT3 + CB1*RB2*RB3*RL*RM1*RM2*RT3
 + CB1*RB1*RB3*RL*RM1*RM2*RT3 + CT2*RB1*RB2*RL*RM1*RM2*RT3
 + CT1*RB3*RB4*RIN*RM1*RM2*RT3 + CT1*RB2*RB4*RIN*RM1*RM2*RT3
 + CB1*RB2*RB4*RIN*RM1*RM2*RT3 + CT1*RB1*RB4*RIN*RM1*RM2*RT3
 + CB1*RB1*RB4*RIN*RM1*RM2*RT3 + CT1*RB2*RB3*RIN*RM1*RM2*RT3
 + CT1*RB1*RB2*RIN*RM1*RM2*RT3 + CB1*RB1*RB2*RIN*RM1*RM2*RT3
 + CB1*RB2*RB3*RB4*RM1*RM2*RT3 + CB1*RB1*RB3*RB4*RM1*RM2*RT3
 + CB1*RB1*RB2*RB3*RM1*RM2*RT3 + CT2*RB3*RB4*RIN*RL*RM2*RT3
 + CT1*RB3*RB4*RIN*RL*RM2*RT3 + CT2*RB2*RB4*RIN*RL*RM2*RT3
 + CT1*RB2*RB4*RIN*RL*RM2*RT3 + CB1*RB2*RB4*RIN*RL*RM2*RT3
 + CT2*RB1*RB4*RIN*RL*RM2*RT3 + CT1*RB1*RB4*RIN*RL*RM2*RT3
 + CB1*RB1*RB4*RIN*RL*RM2*RT3 + CT2*RB2*RB3*RIN*RL*RM2*RT3
 + CT1*RB2*RB3*RIN*RL*RM2*RT3 + CB1*RB2*RB3*RIN*RL*RM2*RT3
 + CB1*RB1*RB3*RIN*RL*RM2*RT3 + CT2*RB1*RB2*RIN*RL*RM2*RT3
 + CT1*RB1*RB2*RIN*RL*RM2*RT3 + CB1*RB1*RB2*RIN*RL*RM2*RT3
 + CB1*RB2*RB3*RB4*RL*RM2*RT3 + CB1*RB1*RB3*RB4*RL*RM2*RT3
 + CB1*RB1*RB2*RB3*RL*RM2*RT3 + CB1*RB2*RB3*RB4*RIN*RM2*RT3
 + CB1*RB1*RB3*RB4*RIN*RM2*RT3 + CB1*RB1*RB2*RB3*RIN*RM2*RT3
 + CT1*RB3*RB4*RIN*RL*RM1*RT3 + CT1*RB2*RB4*RIN*RL*RM1*RT3
 + CB1*RB2*RB4*RIN*RL*RM1*RT3 + CT1*RB1*RB4*RIN*RL*RM1*RT3
 + CB1*RB1*RB4*RIN*RL*RM1*RT3 + CT1*RB2*RB3*RIN*RL*RM1*RT3
 + CT1*RB1*RB2*RIN*RL*RM1*RT3 + CB1*RB1*RB2*RIN*RL*RM1*RT3
 + CB1*RB2*RB3*RB4*RL*RM1*RT3 + CB1*RB1*RB3*RB4*RL*RM1*RT3
 + CB1*RB1*RB2*RB3*RL*RM1*RT3 + CB1*RB2*RB3*RB4*RIN*RL*RT3
 + CB1*RB1*RB3*RB4*RIN*RL*RT3 + CB1*RB1*RB2*RB3*RIN*RL*RT3
 + CT1*RIN*RL*RM2*RM3*RT1*RT2 + CT1*RB3*RL*RM2*RM3*RT1*RT2
 + CT1*RB2*RL*RM2*RM3*RT1*RT2 + CT1*RB1*RL*RM2*RM3*RT1*RT2
 + CT1*RB4*RIN*RM2*RM3*RT1*RT2 + CT1*RB2*RIN*RM2*RM3*RT1*RT2
 + CT1*RB3*RB4*RM2*RM3*RT1*RT2 + CT1*RB2*RB4*RM2*RM3*RT1*RT2
 + CT1*RB1*RB4*RM2*RM3*RT1*RT2 + CT1*RB2*RB3*RM2*RM3*RT1*RT2
 + CT1*RB1*RB2*RM2*RM3*RT1*RT2 + CT1*RIN*RL*RM1*RM3*RT1*RT2
 + CT1*RB3*RL*RM1*RM3*RT1*RT2 + CT1*RB2*RL*RM1*RM3*RT1*RT2
 + CT1*RB1*RL*RM1*RM3*RT1*RT2 + CT1*RB4*RIN*RM1*RM3*RT1*RT2
 + CT1*RB2*RIN*RM1*RM3*RT1*RT2 + CT1*RB3*RB4*RM1*RM3*RT1*RT2
 + CT1*RB2*RB4*RM1*RM3*RT1*RT2 + CT1*RB1*RB4*RM1*RM3*RT1*RT2
 + CT1*RB2*RB3*RM1*RM3*RT1*RT2 + CT1*RB1*RB2*RM1*RM3*RT1*RT2
 + CT1*RB3*RIN*RL*RM3*RT1*RT2 + CT1*RB2*RIN*RL*RM3*RT1*RT2
 + CT1*RB1*RIN*RL*RM3*RT1*RT2 + CT1*RB3*RB4*RIN*RM3*RT1*RT2
 + CT1*RB2*RB4*RIN*RM3*RT1*RT2 + CT1*RB1*RB4*RIN*RM3*RT1*RT2
 + CT1*RB2*RB3*RIN*RM3*RT1*RT2 + CT1*RB1*RB2*RIN*RM3*RT1*RT2
 + CT1*RIN*RL*RM1*RM2*RT1*RT2 + CT1*RB3*RL*RM1*RM2*RT1*RT2
 + CT1*RB2*RL*RM1*RM2*RT1*RT2 + CT1*RB1*RL*RM1*RM2*RT1*RT2
 + CT1*RB4*RIN*RM1*RM2*RT1*RT2 + CT1*RB2*RIN*RM1*RM2*RT1*RT2
 + CT1*RB3*RB4*RM1*RM2*RT1*RT2 + CT1*RB2*RB4*RM1*RM2*RT1*RT2
 + CT1*RB1*RB4*RM1*RM2*RT1*RT2 + CT1*RB2*RB3*RM1*RM2*RT1*RT2
 + CT1*RB1*RB2*RM1*RM2*RT1*RT2 + CT1*RB4*RIN*RL*RM2*RT1*RT2
 + CT1*RB3*RIN*RL*RM2*RT1*RT2 + CT1*RB1*RIN*RL*RM2*RT1*RT2
 + CT1*RB3*RB4*RL*RM2*RT1*RT2 + CT1*RB2*RB4*RL*RM2*RT1*RT2
 + CT1*RB1*RB4*RL*RM2*RT1*RT2 + CT1*RB2*RB3*RL*RM2*RT1*RT2
 + CT1*RB1*RB2*RL*RM2*RT1*RT2 + CT1*RB3*RB4*RIN*RM2*RT1*RT2
 + CT1*RB2*RB4*RIN*RM2*RT1*RT2 + CT1*RB1*RB4*RIN*RM2*RT1*RT2
 + CT1*RB2*RB3*RIN*RM2*RT1*RT2 + CT1*RB1*RB2*RIN*RM2*RT1*RT2
 + CT1*RB4*RIN*RL*RM1*RT1*RT2 + CT1*RB2*RIN*RL*RM1*RT1*RT2
 + CT1*RB3*RB4*RL*RM1*RT1*RT2 + CT1*RB2*RB4*RL*RM1*RT1*RT2
 + CT1*RB1*RB4*RL*RM1*RT1*RT2 + CT1*RB2*RB3*RL*RM1*RT1*RT2
 + CT1*RB1*RB2*RL*RM1*RT1*RT2 + CT1*RB3*RB4*RIN*RL*RT1*RT2
 + CT1*RB2*RB4*RIN*RL*RT1*RT2 + CT1*RB1*RB4*RIN*RL*RT1*RT2
 + CT1*RB2*RB3*RIN*RL*RT1*RT2 + CT1*RB1*RB2*RIN*RL*RT1*RT2
 + CT1*RB4*RIN*RL*RM2*RM3*RT2 + CT1*RB3*RIN*RL*RM2*RM3*RT2
 + CB1*RB2*RIN*RL*RM2*RM3*RT2 + CT1*RB1*RIN*RL*RM2*RM3*RT2
 + CB1*RB1*RIN*RL*RM2*RM3*RT2 + CT1*RB3*RB4*RL*RM2*RM3*RT2
 + CT1*RB2*RB4*RL*RM2*RM3*RT2 + CT1*RB1*RB4*RL*RM2*RM3*RT2
 + CT1*RB2*RB3*RL*RM2*RM3*RT2 + CB1*RB2*RB3*RL*RM2*RM3*RT2
 + CB1*RB1*RB3*RL*RM2*RM3*RT2 + CT1*RB1*RB2*RL*RM2*RM3*RT2
 + CT1*RB3*RB4*RIN*RM2*RM3*RT2 + CT1*RB2*RB4*RIN*RM2*RM3*RT2
 + CB1*RB2*RB4*RIN*RM2*RM3*RT2 + CT1*RB1*RB4*RIN*RM2*RM3*RT2
 + CB1*RB1*RB4*RIN*RM2*RM3*RT2 + CT1*RB2*RB3*RIN*RM2*RM3*RT2
 + CT1*RB1*RB2*RIN*RM2*RM3*RT2 + CB1*RB1*RB2*RIN*RM2*RM3*RT2
 + CB1*RB2*RB3*RB4*RM2*RM3*RT2 + CB1*RB1*RB3*RB4*RM2*RM3*RT2
 + CB1*RB1*RB2*RB3*RM2*RM3*RT2 + CT1*RB4*RIN*RL*RM1*RM3*RT2
 + CT1*RB3*RIN*RL*RM1*RM3*RT2 + CB1*RB2*RIN*RL*RM1*RM3*RT2
 + CT1*RB1*RIN*RL*RM1*RM3*RT2 + CB1*RB1*RIN*RL*RM1*RM3*RT2
 + CT1*RB3*RB4*RL*RM1*RM3*RT2 + CT1*RB2*RB4*RL*RM1*RM3*RT2
 + CT1*RB1*RB4*RL*RM1*RM3*RT2 + CT1*RB2*RB3*RL*RM1*RM3*RT2
 + CB1*RB2*RB3*RL*RM1*RM3*RT2 + CB1*RB1*RB3*RL*RM1*RM3*RT2
 + CT1*RB1*RB2*RL*RM1*RM3*RT2 + CT1*RB3*RB4*RIN*RM1*RM3*RT2
 + CT1*RB2*RB4*RIN*RM1*RM3*RT2 + CB1*RB2*RB4*RIN*RM1*RM3*RT2
 + CT1*RB1*RB4*RIN*RM1*RM3*RT2 + CB1*RB1*RB4*RIN*RM1*RM3*RT2
 + CT1*RB2*RB3*RIN*RM1*RM3*RT2 + CT1*RB1*RB2*RIN*RM1*RM3*RT2
 + CB1*RB1*RB2*RIN*RM1*RM3*RT2 + CB1*RB2*RB3*RB4*RM1*RM3*RT2
 + CB1*RB1*RB3*RB4*RM1*RM3*RT2 + CB1*RB1*RB2*RB3*RM1*RM3*RT2
 + CT1*RB3*RB4*RIN*RL*RM3*RT2 + CT1*RB2*RB4*RIN*RL*RM3*RT2
 + CT1*RB1*RB4*RIN*RL*RM3*RT2 + CT1*RB2*RB3*RIN*RL*RM3*RT2
 + CB1*RB2*RB3*RIN*RL*RM3*RT2 + CB1*RB1*RB3*RIN*RL*RM3*RT2
 + CT1*RB1*RB2*RIN*RL*RM3*RT2 + CB1*RB2*RB3*RB4*RIN*RM3*RT2
 + CB1*RB1*RB3*RB4*RIN*RM3*RT2 + CB1*RB1*RB2*RB3*RIN*RM3*RT2
 + CT1*RB4*RIN*RL*RM1*RM2*RT2 + CT1*RB3*RIN*RL*RM1*RM2*RT2
 + CB1*RB2*RIN*RL*RM1*RM2*RT2 + CT1*RB1*RIN*RL*RM1*RM2*RT2
 + CB1*RB1*RIN*RL*RM1*RM2*RT2 + CT1*RB3*RB4*RL*RM1*RM2*RT2
 + CT1*RB2*RB4*RL*RM1*RM2*RT2 + CT1*RB1*RB4*RL*RM1*RM2*RT2
 + CT1*RB2*RB3*RL*RM1*RM2*RT2 + CB1*RB2*RB3*RL*RM1*RM2*RT2
 + CB1*RB1*RB3*RL*RM1*RM2*RT2 + CT1*RB1*RB2*RL*RM1*RM2*RT2
 + CT1*RB3*RB4*RIN*RM1*RM2*RT2 + CT1*RB2*RB4*RIN*RM1*RM2*RT2
 + CB1*RB2*RB4*RIN*RM1*RM2*RT2 + CT1*RB1*RB4*RIN*RM1*RM2*RT2
 + CB1*RB1*RB4*RIN*RM1*RM2*RT2 + CT1*RB2*RB3*RIN*RM1*RM2*RT2
 + CT1*RB1*RB2*RIN*RM1*RM2*RT2 + CB1*RB1*RB2*RIN*RM1*RM2*RT2
 + CB1*RB2*RB3*RB4*RM1*RM2*RT2 + CB1*RB1*RB3*RB4*RM1*RM2*RT2
 + CB1*RB1*RB2*RB3*RM1*RM2*RT2 + CB1*RB2*RB4*RIN*RL*RM2*RT2
 + CB1*RB1*RB4*RIN*RL*RM2*RT2 + CB1*RB2*RB3*RIN*RL*RM2*RT2
 + CB1*RB1*RB3*RIN*RL*RM2*RT2 + CB1*RB1*RB2*RIN*RL*RM2*RT2
 + CB1*RB2*RB3*RB4*RL*RM2*RT2 + CB1*RB1*RB3*RB4*RL*RM2*RT2
 + CB1*RB1*RB2*RB3*RL*RM2*RT2 + CB1*RB2*RB3*RB4*RIN*RM2*RT2
 + CB1*RB1*RB3*RB4*RIN*RM2*RT2 + CB1*RB1*RB2*RB3*RIN*RM2*RT2
 + CT1*RB3*RB4*RIN*RL*RM1*RT2 + CT1*RB2*RB4*RIN*RL*RM1*RT2
 + CB1*RB2*RB4*RIN*RL*RM1*RT2 + CT1*RB1*RB4*RIN*RL*RM1*RT2
 + CB1*RB1*RB4*RIN*RL*RM1*RT2 + CT1*RB2*RB3*RIN*RL*RM1*RT2
 + CT1*RB1*RB2*RIN*RL*RM1*RT2 + CB1*RB1*RB2*RIN*RL*RM1*RT2
 + CB1*RB2*RB3*RB4*RL*RM1*RT2 + CB1*RB1*RB3*RB4*RL*RM1*RT2
 + CB1*RB1*RB2*RB3*RL*RM1*RT2 + CB1*RB2*RB3*RB4*RIN*RL*RT2
 + CB1*RB1*RB3*RB4*RIN*RL*RT2 + CB1*RB1*RB2*RB3*RIN*RL*RT2
 + CT1*RB4*RIN*RL*RM2*RM3*RT1 + CT1*RB2*RIN*RL*RM2*RM3*RT1
 + CT1*RB3*RB4*RL*RM2*RM3*RT1 + CT1*RB2*RB4*RL*RM2*RM3*RT1
 + CT1*RB1*RB4*RL*RM2*RM3*RT1 + CT1*RB2*RB3*RL*RM2*RM3*RT1
 + CT1*RB1*RB2*RL*RM2*RM3*RT1 + CT1*RB4*RIN*RL*RM1*RM3*RT1
 + CT1*RB2*RIN*RL*RM1*RM3*RT1 + CT1*RB3*RB4*RL*RM1*RM3*RT1
 + CT1*RB2*RB4*RL*RM1*RM3*RT1 + CT1*RB1*RB4*RL*RM1*RM3*RT1
 + CT1*RB2*RB3*RL*RM1*RM3*RT1 + CT1*RB1*RB2*RL*RM1*RM3*RT1
 + CT1*RB3*RB4*RIN*RL*RM3*RT1 + CT1*RB2*RB4*RIN*RL*RM3*RT1
 + CT1*RB1*RB4*RIN*RL*RM3*RT1 + CT1*RB2*RB3*RIN*RL*RM3*RT1
 + CT1*RB1*RB2*RIN*RL*RM3*RT1 + CT1*RB4*RIN*RL*RM1*RM2*RT1
 + CT1*RB2*RIN*RL*RM1*RM2*RT1 + CT1*RB3*RB4*RL*RM1*RM2*RT1
 + CT1*RB2*RB4*RL*RM1*RM2*RT1 + CT1*RB1*RB4*RL*RM1*RM2*RT1
 + CT1*RB2*RB3*RL*RM1*RM2*RT1 + CT1*RB1*RB2*RL*RM1*RM2*RT1
 + CT1*RB3*RB4*RIN*RL*RM2*RT1 + CT1*RB2*RB4*RIN*RL*RM2*RT1
 + CT1*RB1*RB4*RIN*RL*RM2*RT1 + CT1*RB2*RB3*RIN*RL*RM2*RT1
 + CT1*RB1*RB2*RIN*RL*RM2*RT1 + CT1*RB3*RB4*RIN*RL*RM2*RM3
 + CT1*RB2*RB4*RIN*RL*RM2*RM3 + CB1*RB2*RB4*RIN*RL*RM2*RM3
 + CT1*RB1*RB4*RIN*RL*RM2*RM3 + CB1*RB1*RB4*RIN*RL*RM2*RM3
 + CT1*RB2*RB3*RIN*RL*RM2*RM3 + CT1*RB1*RB2*RIN*RL*RM2*RM3
 + CB1*RB1*RB2*RIN*RL*RM2*RM3 + CB1*RB2*RB3*RB4*RL*RM2*RM3
 + CB1*RB1*RB3*RB4*RL*RM2*RM3 + CB1*RB1*RB2*RB3*RL*RM2*RM3
 + CT1*RB3*RB4*RIN*RL*RM1*RM3 + CT1*RB2*RB4*RIN*RL*RM1*RM3
 + CB1*RB2*RB4*RIN*RL*RM1*RM3 + CT1*RB1*RB4*RIN*RL*RM1*RM3
 + CB1*RB1*RB4*RIN*RL*RM1*RM3 + CT1*RB2*RB3*RIN*RL*RM1*RM3
 + CT1*RB1*RB2*RIN*RL*RM1*RM3 + CB1*RB1*RB2*RIN*RL*RM1*RM3
 + CB1*RB2*RB3*RB4*RL*RM1*RM3 + CB1*RB1*RB3*RB4*RL*RM1*RM3
 + CB1*RB1*RB2*RB3*RL*RM1*RM3 + CB1*RB2*RB3*RB4*RIN*RL*RM3
 + CB1*RB1*RB3*RB4*RIN*RL*RM3 + CB1*RB1*RB2*RB3*RIN*RL*RM3
 + CT1*RB3*RB4*RIN*RL*RM1*RM2 + CT1*RB2*RB4*RIN*RL*RM1*RM2
 + CB1*RB2*RB4*RIN*RL*RM1*RM2 + CT1*RB1*RB4*RIN*RL*RM1*RM2
 + CB1*RB1*RB4*RIN*RL*RM1*RM2 + CT1*RB2*RB3*RIN*RL*RM1*RM2
 + CT1*RB1*RB2*RIN*RL*RM1*RM2 + CB1*RB1*RB2*RIN*RL*RM1*RM2
 + CB1*RB2*RB3*RB4*RL*RM1*RM2 + CB1*RB1*RB3*RB4*RL*RM1*RM2
 + CB1*RB1*RB2*RB3*RL*RM1*RM2 + CB1*RB2*RB3*RB4*RIN*RL*RM2
 + CB1*RB1*RB3*RB4*RIN*RL*RM2 + CB1*RB1*RB2*RB3*RIN*RL*RM2;


var DEN_DRe = RIN*RL*RM2*RM3*RT3 + RB3*RL*RM2*RM3*RT3 + RB2*RL*RM2*RM3*RT3
 + RB1*RL*RM2*RM3*RT3 + RB4*RIN*RM2*RM3*RT3 + RB2*RIN*RM2*RM3*RT3
 + RB3*RB4*RM2*RM3*RT3 + RB2*RB4*RM2*RM3*RT3 + RB1*RB4*RM2*RM3*RT3
 + RB2*RB3*RM2*RM3*RT3 + RB1*RB2*RM2*RM3*RT3 + RIN*RL*RM1*RM3*RT3
 + RB3*RL*RM1*RM3*RT3 + RB2*RL*RM1*RM3*RT3 + RB1*RL*RM1*RM3*RT3
 + RB4*RIN*RM1*RM3*RT3 + RB2*RIN*RM1*RM3*RT3 + RB3*RB4*RM1*RM3*RT3
 + RB2*RB4*RM1*RM3*RT3 + RB1*RB4*RM1*RM3*RT3 + RB2*RB3*RM1*RM3*RT3
 + RB1*RB2*RM1*RM3*RT3 + RB3*RIN*RL*RM3*RT3 + RB2*RIN*RL*RM3*RT3
 + RB1*RIN*RL*RM3*RT3 + RB3*RB4*RIN*RM3*RT3 + RB2*RB4*RIN*RM3*RT3
 + RB1*RB4*RIN*RM3*RT3 + RB2*RB3*RIN*RM3*RT3 + RB1*RB2*RIN*RM3*RT3
 + RIN*RL*RM1*RM2*RT3 + RB3*RL*RM1*RM2*RT3 + RB2*RL*RM1*RM2*RT3
 + RB1*RL*RM1*RM2*RT3 + RB4*RIN*RM1*RM2*RT3 + RB2*RIN*RM1*RM2*RT3
 + RB3*RB4*RM1*RM2*RT3 + RB2*RB4*RM1*RM2*RT3 + RB1*RB4*RM1*RM2*RT3
 + RB2*RB3*RM1*RM2*RT3 + RB1*RB2*RM1*RM2*RT3 + RB4*RIN*RL*RM2*RT3
 + RB3*RIN*RL*RM2*RT3 + RB1*RIN*RL*RM2*RT3 + RB3*RB4*RL*RM2*RT3
 + RB2*RB4*RL*RM2*RT3 + RB1*RB4*RL*RM2*RT3 + RB2*RB3*RL*RM2*RT3
 + RB1*RB2*RL*RM2*RT3 + RB3*RB4*RIN*RM2*RT3 + RB2*RB4*RIN*RM2*RT3
 + RB1*RB4*RIN*RM2*RT3 + RB2*RB3*RIN*RM2*RT3 + RB1*RB2*RIN*RM2*RT3
 + RB4*RIN*RL*RM1*RT3 + RB2*RIN*RL*RM1*RT3 + RB3*RB4*RL*RM1*RT3
 + RB2*RB4*RL*RM1*RT3 + RB1*RB4*RL*RM1*RT3 + RB2*RB3*RL*RM1*RT3
 + RB1*RB2*RL*RM1*RT3 + RB3*RB4*RIN*RL*RT3 + RB2*RB4*RIN*RL*RT3
 + RB1*RB4*RIN*RL*RT3 + RB2*RB3*RIN*RL*RT3 + RB1*RB2*RIN*RL*RT3
 + RIN*RL*RM2*RM3*RT2 + RB3*RL*RM2*RM3*RT2 + RB2*RL*RM2*RM3*RT2
 + RB1*RL*RM2*RM3*RT2 + RB4*RIN*RM2*RM3*RT2 + RB2*RIN*RM2*RM3*RT2
 + RB3*RB4*RM2*RM3*RT2 + RB2*RB4*RM2*RM3*RT2 + RB1*RB4*RM2*RM3*RT2
 + RB2*RB3*RM2*RM3*RT2 + RB1*RB2*RM2*RM3*RT2 + RIN*RL*RM1*RM3*RT2
 + RB3*RL*RM1*RM3*RT2 + RB2*RL*RM1*RM3*RT2 + RB1*RL*RM1*RM3*RT2
 + RB4*RIN*RM1*RM3*RT2 + RB2*RIN*RM1*RM3*RT2 + RB3*RB4*RM1*RM3*RT2
 + RB2*RB4*RM1*RM3*RT2 + RB1*RB4*RM1*RM3*RT2 + RB2*RB3*RM1*RM3*RT2
 + RB1*RB2*RM1*RM3*RT2 + RB3*RIN*RL*RM3*RT2 + RB2*RIN*RL*RM3*RT2
 + RB1*RIN*RL*RM3*RT2 + RB3*RB4*RIN*RM3*RT2 + RB2*RB4*RIN*RM3*RT2
 + RB1*RB4*RIN*RM3*RT2 + RB2*RB3*RIN*RM3*RT2 + RB1*RB2*RIN*RM3*RT2
 + RIN*RL*RM1*RM2*RT2 + RB3*RL*RM1*RM2*RT2 + RB2*RL*RM1*RM2*RT2
 + RB1*RL*RM1*RM2*RT2 + RB4*RIN*RM1*RM2*RT2 + RB2*RIN*RM1*RM2*RT2
 + RB3*RB4*RM1*RM2*RT2 + RB2*RB4*RM1*RM2*RT2 + RB1*RB4*RM1*RM2*RT2
 + RB2*RB3*RM1*RM2*RT2 + RB1*RB2*RM1*RM2*RT2 + RB4*RIN*RL*RM2*RT2
 + RB3*RIN*RL*RM2*RT2 + RB1*RIN*RL*RM2*RT2 + RB3*RB4*RL*RM2*RT2
 + RB2*RB4*RL*RM2*RT2 + RB1*RB4*RL*RM2*RT2 + RB2*RB3*RL*RM2*RT2
 + RB1*RB2*RL*RM2*RT2 + RB3*RB4*RIN*RM2*RT2 + RB2*RB4*RIN*RM2*RT2
 + RB1*RB4*RIN*RM2*RT2 + RB2*RB3*RIN*RM2*RT2 + RB1*RB2*RIN*RM2*RT2
 + RB4*RIN*RL*RM1*RT2 + RB2*RIN*RL*RM1*RT2 + RB3*RB4*RL*RM1*RT2
 + RB2*RB4*RL*RM1*RT2 + RB1*RB4*RL*RM1*RT2 + RB2*RB3*RL*RM1*RT2
 + RB1*RB2*RL*RM1*RT2 + RB3*RB4*RIN*RL*RT2 + RB2*RB4*RIN*RL*RT2
 + RB1*RB4*RIN*RL*RT2 + RB2*RB3*RIN*RL*RT2 + RB1*RB2*RIN*RL*RT2
 + RB4*RIN*RL*RM2*RM3 + RB2*RIN*RL*RM2*RM3 + RB3*RB4*RL*RM2*RM3
 + RB2*RB4*RL*RM2*RM3 + RB1*RB4*RL*RM2*RM3 + RB2*RB3*RL*RM2*RM3
 + RB1*RB2*RL*RM2*RM3 + RB4*RIN*RL*RM1*RM3 + RB2*RIN*RL*RM1*RM3
 + RB3*RB4*RL*RM1*RM3 + RB2*RB4*RL*RM1*RM3 + RB1*RB4*RL*RM1*RM3
 + RB2*RB3*RL*RM1*RM3 + RB1*RB2*RL*RM1*RM3 + RB3*RB4*RIN*RL*RM3
 + RB2*RB4*RIN*RL*RM3 + RB1*RB4*RIN*RL*RM3 + RB2*RB3*RIN*RL*RM3
 + RB1*RB2*RIN*RL*RM3 + RB4*RIN*RL*RM1*RM2 + RB2*RIN*RL*RM1*RM2
 + RB3*RB4*RL*RM1*RM2 + RB2*RB4*RL*RM1*RM2 + RB1*RB4*RL*RM1*RM2
 + RB2*RB3*RL*RM1*RM2 + RB1*RB2*RL*RM1*RM2 + RB3*RB4*RIN*RL*RM2
 + RB2*RB4*RIN*RL*RM2 + RB1*RB4*RIN*RL*RM2 + RB2*RB3*RIN*RL*RM2
 + RB1*RB2*RIN*RL*RM2;

var NOM_XRe = 0;

var NOM_AIm = CB1*CT1*CT2*RB2*RB3*RB4*RL*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RL*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RL*RM2*RT1*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RL*RM2*RM3*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RL*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RL*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RL*RM1*RM3*RT2*RT3
 + CB1*CT1*CT2*RB2*RB3*RB4*RL*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB1*RB3*RB4*RL*RM1*RM2*RT2*RT3
 + CB1*CT1*CT2*RB1*RB2*RB3*RL*RM1*RM2*RT2*RT3;


var NOM_BRe = CT1*CT2*RB2*RL*RM2*RM3*RT1*RT2*RT3 + CT1*CT2*RB2*RL*RM1*RM3*RT1*RT2*RT3
 + CT1*CT2*RB2*RL*RM1*RM2*RT1*RT2*RT3 + CT1*CT2*RB3*RB4*RL*RM2*RT1*RT2*RT3
 + CT1*CT2*RB2*RB4*RL*RM2*RT1*RT2*RT3 + CT1*CT2*RB1*RB4*RL*RM2*RT1*RT2*RT3
 + CT1*CT2*RB2*RB3*RL*RM2*RT1*RT2*RT3 + CT1*CT2*RB1*RB2*RL*RM2*RT1*RT2*RT3
 + CT1*CT2*RB3*RB4*RL*RM2*RM3*RT2*RT3 + CT1*CT2*RB2*RB4*RL*RM2*RM3*RT2*RT3
 + CT1*CT2*RB1*RB4*RL*RM2*RM3*RT2*RT3 + CT1*CT2*RB2*RB3*RL*RM2*RM3*RT2*RT3
 + CT1*CT2*RB1*RB2*RL*RM2*RM3*RT2*RT3 + CT1*CT2*RB3*RB4*RL*RM1*RM3*RT2*RT3
 + CT1*CT2*RB2*RB4*RL*RM1*RM3*RT2*RT3 + CT1*CT2*RB1*RB4*RL*RM1*RM3*RT2*RT3
 + CT1*CT2*RB2*RB3*RL*RM1*RM3*RT2*RT3 + CT1*CT2*RB1*RB2*RL*RM1*RM3*RT2*RT3
 + CT1*CT2*RB3*RB4*RL*RM1*RM2*RT2*RT3 + CT1*CT2*RB2*RB4*RL*RM1*RM2*RT2*RT3
 + CT1*CT2*RB1*RB4*RL*RM1*RM2*RT2*RT3 + CT1*CT2*RB2*RB3*RL*RM1*RM2*RT2*RT3
 + CT1*CT2*RB1*RB2*RL*RM1*RM2*RT2*RT3 + CB1*CT2*RB2*RB3*RB4*RL*RM2*RT2*RT3
 + CB1*CT1*RB2*RB3*RB4*RL*RM2*RT2*RT3 + CB1*CT2*RB1*RB3*RB4*RL*RM2*RT2*RT3
 + CB1*CT1*RB1*RB3*RB4*RL*RM2*RT2*RT3 + CB1*CT2*RB1*RB2*RB3*RL*RM2*RT2*RT3
 + CB1*CT1*RB1*RB2*RB3*RL*RM2*RT2*RT3 + CB1*CT1*RB2*RB3*RB4*RL*RM2*RT1*RT3
 + CB1*CT1*RB1*RB3*RB4*RL*RM2*RT1*RT3 + CB1*CT1*RB1*RB2*RB3*RL*RM2*RT1*RT3
 + CB1*CT1*RB2*RB3*RB4*RL*RM2*RT1*RT2 + CB1*CT1*RB1*RB3*RB4*RL*RM2*RT1*RT2
 + CB1*CT1*RB1*RB2*RB3*RL*RM2*RT1*RT2 + CB1*CT1*RB2*RB3*RB4*RL*RM2*RM3*RT2
 + CB1*CT1*RB1*RB3*RB4*RL*RM2*RM3*RT2 + CB1*CT1*RB1*RB2*RB3*RL*RM2*RM3*RT2
 + CB1*CT1*RB2*RB3*RB4*RL*RM1*RM3*RT2 + CB1*CT1*RB1*RB3*RB4*RL*RM1*RM3*RT2
 + CB1*CT1*RB1*RB2*RB3*RL*RM1*RM3*RT2 + CB1*CT1*RB2*RB3*RB4*RL*RM1*RM2*RT2
 + CB1*CT1*RB1*RB3*RB4*RL*RM1*RM2*RT2 + CB1*CT1*RB1*RB2*RB3*RL*RM1*RM2*RT2;


var NOM_CIm = CT2*RB2*RL*RM2*RM3*RT2*RT3 + CT1*RB2*RL*RM2*RM3*RT2*RT3
 + CT2*RB2*RL*RM1*RM3*RT2*RT3 + CT1*RB2*RL*RM1*RM3*RT2*RT3
 + CT2*RB2*RL*RM1*RM2*RT2*RT3 + CT1*RB2*RL*RM1*RM2*RT2*RT3
 + CT2*RB3*RB4*RL*RM2*RT2*RT3 + CT1*RB3*RB4*RL*RM2*RT2*RT3
 + CT2*RB2*RB4*RL*RM2*RT2*RT3 + CT1*RB2*RB4*RL*RM2*RT2*RT3
 + CT2*RB1*RB4*RL*RM2*RT2*RT3 + CT1*RB1*RB4*RL*RM2*RT2*RT3
 + CT2*RB2*RB3*RL*RM2*RT2*RT3 + CT1*RB2*RB3*RL*RM2*RT2*RT3
 + CT2*RB1*RB2*RL*RM2*RT2*RT3 + CT1*RB1*RB2*RL*RM2*RT2*RT3
 + CT1*RB2*RL*RM2*RM3*RT1*RT3 + CT1*RB2*RL*RM1*RM3*RT1*RT3
 + CT1*RB2*RL*RM1*RM2*RT1*RT3 + CT1*RB3*RB4*RL*RM2*RT1*RT3
 + CT1*RB2*RB4*RL*RM2*RT1*RT3 + CT1*RB1*RB4*RL*RM2*RT1*RT3
 + CT1*RB2*RB3*RL*RM2*RT1*RT3 + CT1*RB1*RB2*RL*RM2*RT1*RT3
 + CB1*RB2*RB3*RB4*RL*RM2*RT3 + CB1*RB1*RB3*RB4*RL*RM2*RT3
 + CB1*RB1*RB2*RB3*RL*RM2*RT3 + CT1*RB2*RL*RM2*RM3*RT1*RT2
 + CT1*RB2*RL*RM1*RM3*RT1*RT2 + CT1*RB2*RL*RM1*RM2*RT1*RT2
 + CT1*RB3*RB4*RL*RM2*RT1*RT2 + CT1*RB2*RB4*RL*RM2*RT1*RT2
 + CT1*RB1*RB4*RL*RM2*RT1*RT2 + CT1*RB2*RB3*RL*RM2*RT1*RT2
 + CT1*RB1*RB2*RL*RM2*RT1*RT2 + CT1*RB3*RB4*RL*RM2*RM3*RT2
 + CT1*RB2*RB4*RL*RM2*RM3*RT2 + CT1*RB1*RB4*RL*RM2*RM3*RT2
 + CT1*RB2*RB3*RL*RM2*RM3*RT2 + CT1*RB1*RB2*RL*RM2*RM3*RT2
 + CT1*RB3*RB4*RL*RM1*RM3*RT2 + CT1*RB2*RB4*RL*RM1*RM3*RT2
 + CT1*RB1*RB4*RL*RM1*RM3*RT2 + CT1*RB2*RB3*RL*RM1*RM3*RT2
 + CT1*RB1*RB2*RL*RM1*RM3*RT2 + CT1*RB3*RB4*RL*RM1*RM2*RT2
 + CT1*RB2*RB4*RL*RM1*RM2*RT2 + CT1*RB1*RB4*RL*RM1*RM2*RT2
 + CT1*RB2*RB3*RL*RM1*RM2*RT2 + CT1*RB1*RB2*RL*RM1*RM2*RT2
 + CB1*RB2*RB3*RB4*RL*RM2*RT2 + CB1*RB1*RB3*RB4*RL*RM2*RT2
 + CB1*RB1*RB2*RB3*RL*RM2*RT2;


var NOM_DRe = RB2*RL*RM2*RM3*RT3 + RB2*RL*RM1*RM3*RT3 + RB2*RL*RM1*RM2*RT3
 + RB3*RB4*RL*RM2*RT3 + RB2*RB4*RL*RM2*RT3 + RB1*RB4*RL*RM2*RT3
 + RB2*RB3*RL*RM2*RT3 + RB1*RB2*RL*RM2*RT3 + RB2*RL*RM2*RM3*RT2
 + RB2*RL*RM1*RM3*RT2 + RB2*RL*RM1*RM2*RT2 + RB3*RB4*RL*RM2*RT2
 + RB2*RB4*RL*RM2*RT2 + RB1*RB4*RL*RM2*RT2 + RB2*RB3*RL*RM2*RT2
 + RB1*RB2*RL*RM2*RT2;

        // loop through the selected frequency points and do calculation
        for (j = 0; j < X.length; j++) {
            // w = 2*pi*f
            var w = 2*Math.PI*X[j];

            var XDEN_XRe =  w*w*w*w*DEN_XRe;
            var XDEN_AIm = -w*w*w*DEN_AIm;
            var XDEN_BRe = -w*w*DEN_BRe;
            var XDEN_CIm =  w*DEN_CIm;
            var XDEN_DRe =  DEN_DRe;

            var DENOMINATOR = ( (XDEN_XRe + XDEN_BRe + XDEN_DRe)*(XDEN_XRe + XDEN_BRe + XDEN_DRe) + (XDEN_AIm + XDEN_CIm)*(XDEN_AIm + XDEN_CIm) );

            var XNOM_I_XRe =  w*w*w*w*NOM_XRe;
            var XNOM_I_AIm = -w*w*w*NOM_AIm;
            var XNOM_I_BRe = -w*w*NOM_BRe;
            var XNOM_I_CIm =  w*NOM_CIm;
            var XNOM_I_DRe =  NOM_DRe;

            var NUMERATOR_Re = (XNOM_I_XRe + XNOM_I_BRe + XNOM_I_DRe)*(XDEN_XRe + XDEN_BRe + XDEN_DRe) + (XNOM_I_AIm + XNOM_I_CIm)*(XDEN_AIm + XDEN_CIm);
            var NUMERATOR_Im = (XDEN_XRe + XDEN_BRe + XDEN_DRe)*(XNOM_I_AIm + XNOM_I_CIm) - (XNOM_I_XRe + XNOM_I_BRe + XNOM_I_DRe)*(XDEN_AIm + XDEN_CIm);

            var voltage = Math.sqrt(NUMERATOR_Re*NUMERATOR_Re + NUMERATOR_Im*NUMERATOR_Im)/DENOMINATOR;

            row = [];
            row.push(X[j]);
            // add possible snapshot data from storage
            for (k = 1; k < series; k++) {
                row.push(storeData[j][k]);
            }
            row.push( 20*Math.log(voltage)/Math.log(10) );
            data.push(row);
        }

        if (!g) {
            g = createDyGraph(data, "Aria");
        } else {
            g.updateOptions({file: data, labels: labelArray, colors: colorArray});
        }
    }

</SCRIPT>
</FORM>
</BODY>
</HTML>
