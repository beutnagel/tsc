/* Maxima batch file for solving circuit transfer function from matrix representation  */
/* in symbolic form using Cramer's rule. The numerator and denominator expressions are */
/* evaluated separately as polynomial coefficients in powers of complex variable s.    */
/* This example solves the coefficients for Big Muff tone control circuit as Vout/Vin  */
/* Jarmo L. 14.9.2018 */

stardisp: true$           /* multiplication is displayed with an asterisk between operands */
ratmx: true$              /* matrix operations  are performed in CRE */
/* matrix obtained from current loops in the circuit */
matrix(
  [RIN+R1+1/(s*C2),        -R1        ,   -1/(s*C2)   ,    0    ],
  [      -R1      ,R1+RM1+RM2+1/(s*C1),     -RM2      ,  -RM1   ],
  [   -1/(s*C2)   ,       -RM2        ,RM2+RL+1/(s*C2),   -RL   ],
  [       0       ,       -RM1        ,      -RL      ,R2+RL+RM1]
)$
determinant(%)$           /* evaluates the determinant of the previous output % */
DEN_fs: factor(%)$        /* expands the result and factors to common denominator, save to variable DEN_fs */
DEN_den: denom(DEN_fs)$   /* saves a variable DEN_den for denominator expression */ 
pld: num(DEN_fs)$         /* saves a variable pld for numerator expression */
/* extract denominator coefficients in the powers of s to designated variables */
DEN_AIm: coeff(pld,s,3);
DEN_BRe: coeff(pld,s,2);
DEN_CIm: coeff(pld,s,1);
DEN_DRe: coeff(pld,s,0);

/* matrix to solve Iout using Cramer's rule */
matrix(
  [RIN+R1+1/(s*C2),        -R1        ,       1       ,    0    ],
  [      -R1      ,R1+RM1+RM2+1/(s*C1),       0       ,  -RM1   ],
  [   -1/(s*C2)   ,       -RM2        ,       0       ,   -RL   ],
  [       0       ,       -RM1        ,       0       ,R2+RL+RM1]
)$
III: determinant(%)$
matrix(
  [RIN+R1+1/(s*C2),        -R1        ,   -1/(s*C2)   ,    1    ],
  [      -R1      ,R1+RM1+RM2+1/(s*C1),     -RM2      ,    0    ],
  [   -1/(s*C2)   ,       -RM2        ,RM2+RL+1/(s*C2),    0    ],
  [       0       ,       -RM1        ,      -RL      ,    0    ]
)$
IIII: determinant(%)$
III-IIII$
NUM_fs: factor(%)$
NUM_den: denom(NUM_fs)$
pln: expand(RL*num(NUM_fs)*DEN_den/NUM_den)$   /* expand to common denominator for numerator and denominator in Cramer's division */
/* extract numerator coefficients in the powers of s to designated variables */
NUM_AIm: coeff(pln,s,3);
NUM_BRe: coeff(pln,s,2);
NUM_CIm: coeff(pln,s,1);
NUM_DRe: coeff(pln,s,0);
DEN_den;
NUM_den;
DEN_den/NUM_den;


